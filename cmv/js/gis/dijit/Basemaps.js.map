{"version":3,"sources":["Basemaps.js"],"names":["define","declare","_WidgetBase","_TemplatedMixin","_WidgetsInTemplateMixin","lang","array","topic","DropDownMenu","MenuItem","esriBasemaps","BasemapGallery","template","i18n","templateString","widgetsInTemplate","title","basemaps","currentBasemap","mapStartBasemap","basemapsToShow","galleryOptions","basemapIds","basemapsGroup","bingMapsKey","portalUrl","referenceIds","showArcGISBasemaps","postCreate","this","inherited","arguments","initializeBasemaps","createBasemapGallery","subscribe","hitch","map","basemap","id","Object","keys","length","clone","forEach","key","declaredClass","push","getBasemap","indexOf","opts","mixin","gallery","startup","on","buildMenu","menu","style","hasOwnProperty","menuItem","label","iconClass","onClick","addChild","dropDownButton","set","setStartingBasemap","get","updateBasemap","select","publish","_removeBasemapLayers","_removeReferenceLayer","setBasemap","ch","getChildren","c"],"mappings":"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","file":"Basemaps.js","sourcesContent":["define([\r\n    'dojo/_base/declare',\r\n    'dijit/_WidgetBase',\r\n    'dijit/_TemplatedMixin',\r\n    'dijit/_WidgetsInTemplateMixin',\r\n\r\n    'dojo/_base/lang',\r\n    'dojo/_base/array',\r\n    'dojo/topic',\r\n\r\n    'dijit/DropDownMenu',\r\n    'dijit/MenuItem',\r\n\r\n    'esri/basemaps',\r\n    'esri/dijit/BasemapGallery',\r\n\r\n    'dojo/text!./Basemaps/templates/Basemaps.html',\r\n    'dojo/i18n!./Basemaps/nls/resource',\r\n\r\n    'dijit/form/DropDownButton',\r\n    'xstyle/css!./Basemaps/css/Basemaps.css'\r\n], function (\r\n    declare,\r\n    _WidgetBase,\r\n    _TemplatedMixin,\r\n    _WidgetsInTemplateMixin,\r\n\r\n    lang,\r\n    array,\r\n    topic,\r\n\r\n    DropDownMenu,\r\n    MenuItem,\r\n\r\n    esriBasemaps,\r\n    BasemapGallery,\r\n\r\n    template,\r\n    i18n\r\n) {\r\n\r\n    return declare([_WidgetBase, _TemplatedMixin, _WidgetsInTemplateMixin], {\r\n        templateString: template,\r\n        widgetsInTemplate: true,\r\n        i18n: i18n,\r\n        title: i18n.title,\r\n\r\n        basemaps: {},\r\n        currentBasemap: null,\r\n        mapStartBasemap: null,\r\n        basemapsToShow: null,\r\n        galleryOptions: {\r\n            basemapIds: null,\r\n            basemaps: null,\r\n            basemapsGroup: null,\r\n            bingMapsKey: null,\r\n            portalUrl: null,\r\n            referenceIds: null,\r\n            showArcGISBasemaps: false\r\n        },\r\n\r\n        postCreate: function () {\r\n            this.inherited(arguments);\r\n            this.initializeBasemaps();\r\n            this.createBasemapGallery();\r\n            topic.subscribe('basemaps/updateBasemap', lang.hitch(this, 'updateBasemap'));\r\n        },\r\n\r\n        initializeBasemaps: function () {\r\n            if (this.galleryOptions.basemaps) {\r\n                // if the basemaps to show is not explicitly set, get them from the gallery's basemap array\r\n                this.basemapsToShow = this.basemapsToShow || array.map(this.galleryOptions.basemaps, function (basemap) {\r\n                    return basemap.id;\r\n                });\r\n            } else {\r\n                // no basemaps? use the Esri basemaps\r\n                if (!this.basemaps || Object.keys(this.basemaps).length < 1) {\r\n                    this.basemaps = lang.clone(esriBasemaps);\r\n                    this.galleryOptions.showArcGISBasemaps = false;\r\n                }\r\n\r\n                // if the basemaps to show is not explicitly set, get them from the basemap object\r\n                this.basemapsToShow = this.basemapsToShow || Object.keys(this.basemaps);\r\n\r\n                var basemaps = [];\r\n                array.forEach(this.basemapsToShow, lang.hitch(this, function (key) {\r\n                    var map = this.basemaps[key];\r\n                    // determine if it is a custom basemap or an esri basemap\r\n                    if (map.basemap && map.basemap.declaredClass === 'esri.dijit.Basemap') {\r\n                        var basemap = map.basemap;\r\n                        basemap.title = map.title || basemap.title;\r\n                        basemap.id = key;\r\n                        basemaps.push(basemap);\r\n                    } else {\r\n                        if (!esriBasemaps[key]) {\r\n                            map.basemap.title = map.title || map.basemap.title;\r\n                            esriBasemaps[key] = map.basemap;\r\n                        }\r\n                        map.title = map.title || esriBasemaps[key].title;\r\n                        this.galleryOptions.showArcGISBasemaps = false;\r\n                    }\r\n                }));\r\n                this.galleryOptions.basemaps = basemaps;\r\n            }\r\n\r\n            // if the starting basemap is not explicitly set, get it from the map\r\n            this.mapStartBasemap = this.mapStartBasemap || this.map.getBasemap();\r\n\r\n            // check to make sure the starting basemap is found in the basemaps object\r\n            if (array.indexOf(this.basemapsToShow, this.mapStartBasemap) < 0) {\r\n                this.mapStartBasemap = this.basemapsToShow[0];\r\n            }\r\n        },\r\n\r\n        createBasemapGallery: function () {\r\n            var opts = lang.mixin({\r\n                map: this.map\r\n            }, this.galleryOptions);\r\n            this.gallery = new BasemapGallery(opts);\r\n            this.gallery.startup();\r\n            if (this.galleryOptions.showArcGISBasemaps) {\r\n                this.gallery.on('load', lang.hitch(this, 'buildMenu'));\r\n            } else {\r\n                this.buildMenu();\r\n            }\r\n        },\r\n\r\n        buildMenu: function () {\r\n            this.menu = new DropDownMenu({\r\n                style: 'display: none;'\r\n            });\r\n            array.forEach(this.basemapsToShow, function (basemap) {\r\n                if (this.basemaps.hasOwnProperty(basemap)) {\r\n                    var menuItem = new MenuItem({\r\n                        id: basemap,\r\n                        label: this.basemaps[basemap].title,\r\n                        iconClass: (basemap === this.mapStartBasemap) ? 'selectedIcon' : 'emptyIcon',\r\n                        onClick: lang.hitch(this, 'updateBasemap', basemap)\r\n                    });\r\n                    this.menu.addChild(menuItem);\r\n                }\r\n            }, this);\r\n            this.dropDownButton.set('dropDown', this.menu);\r\n            this.setStartingBasemap();\r\n        },\r\n\r\n        setStartingBasemap: function () {\r\n            if (this.mapStartBasemap && (this.gallery.get(this.mapStartBasemap) || esriBasemaps[this.mapStartBasemap])) {\r\n                this.updateBasemap(this.mapStartBasemap);\r\n            }\r\n        },\r\n\r\n        updateBasemap: function (basemap) {\r\n            if (basemap !== this.currentBasemap && (array.indexOf(this.basemapsToShow, basemap) !== -1)) {\r\n                if (this.gallery.get(basemap)) {\r\n                    this.gallery.select(basemap);\r\n                } else if (esriBasemaps[basemap]) {\r\n                    this.gallery._removeBasemapLayers();\r\n                    this.gallery._removeReferenceLayer();\r\n                    this.map.setBasemap(basemap);\r\n                } else {\r\n                    topic.publish('viewer/error', 'Invalid basemap selected.');\r\n                    return;\r\n                }\r\n                this.currentBasemap = basemap;\r\n                var ch = this.menu.getChildren();\r\n                array.forEach(ch, function (c) {\r\n                    if (c.id === basemap) {\r\n                        c.set('iconClass', 'selectedIcon');\r\n                    } else {\r\n                        c.set('iconClass', 'emptyIcon');\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n});"]}