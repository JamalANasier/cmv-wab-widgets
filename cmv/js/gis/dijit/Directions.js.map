{"version":3,"sources":["Directions.js"],"names":["define","declare","_WidgetBase","_TemplatedMixin","Directions","template","lang","Menu","MenuItem","PopupMenuItem","MenuSeparator","Point","SpatialReference","topic","i18n","domStyle","templateString","postCreate","this","inherited","arguments","directions","mixin","map","options","directionsNode","startup","_activateButton","set","_activateButtonNode","_addDestinationNode","_optionsButtonNode","float","marginRight","mapRightClickMenu","addRightClickMenu","on","hitch","evt","mapRightClickPoint","mapPoint","menu","addChild","label","labels","directionsFromHere","onClick","directionsToHere","addStop","useMyLocationAsStart","useMyLocationAsEnd","popup","clearStops","reset","directionsFrom","updateStop","then","directionsTo","stops","length","doRoute","parentWidget","open","toggle","getDirections","startAtMyLocation","getGeoLocation","endAtMyLocation","leg","navigator","geolocation","getCurrentPosition","publish","title","errors","geoLocation","message","level","timeout","opacity","locationSuccess","event","coords","longitude","latitude","wkid","locationError","error","location"],"mappings":";;;;;AAAAA,QACI,qBACA,oBACA,wBACA,wBACA,mDACA,kBACA,aACA,iBACA,sBACA,sBACA,sBACA,wBACA,aACA,sCACA,kBACD,SAAUC,EAASC,EAAaC,EAAiBC,EAAYC,EAAUC,EAAMC,EAAMC,EAAUC,EAAeC,EAAeC,EAAOC,EAAkBC,EAAOC,EAAMC,GAEhK,MAAOd,IAASC,EAAaC,IACzBa,eAAgBX,EAChBS,KAAMA,EACNG,WAAY,WACRC,KAAKC,UAAUC,WACfF,KAAKG,WAAa,GAAIjB,GAAWE,EAAKgB,OAClCC,IAAKL,KAAKK,KACXL,KAAKM,SAAUN,KAAKO,gBACvBP,KAAKG,WAAWK,UAGZR,KAAKG,WAAWM,gBAChBZ,EAASa,IAAIV,KAAKG,WAAWM,gBAAiB,UAAW,QAClDT,KAAKG,WAAWQ,sBACvBd,EAASa,IAAIV,KAAKG,WAAWQ,oBAAqB,UAAW,QAC7Dd,EAASa,IAAIV,KAAKG,WAAWS,oBAAqB,QAAS,WAC3Df,EAASa,IAAIV,KAAKG,WAAWU,oBACzBC,MAAS,UACTC,YAAa,SAIjBf,KAAKgB,mBACLhB,KAAKiB,qBAGbA,kBAAmB,WAEfjB,KAAKK,IAAIa,GAAG,YAAa9B,EAAK+B,MAAMnB,KAAM,SAAUoB,GAChDpB,KAAKqB,mBAAqBD,EAAIE,YAGlCtB,KAAKuB,KAAO,GAAIlC,GAChBW,KAAKuB,KAAKC,SAAS,GAAIlC,IACnBmC,MAAOzB,KAAKJ,KAAK8B,OAAOC,mBACxBC,QAASxC,EAAK+B,MAAMnB,KAAM,qBAE9BA,KAAKuB,KAAKC,SAAS,GAAIlC,IACnBmC,MAAOzB,KAAKJ,KAAK8B,OAAOG,iBACxBD,QAASxC,EAAK+B,MAAMnB,KAAM,mBAE9BA,KAAKuB,KAAKC,SAAS,GAAIhC,IACvBQ,KAAKuB,KAAKC,SAAS,GAAIlC,IACnBmC,MAAOzB,KAAKJ,KAAK8B,OAAOI,QACxBF,QAASxC,EAAK+B,MAAMnB,KAAM,cAE9BA,KAAKuB,KAAKC,SAAS,GAAIhC,IACvBQ,KAAKuB,KAAKC,SAAS,GAAIlC,IACnBmC,MAAOzB,KAAKJ,KAAK8B,OAAOK,qBACxBH,QAASxC,EAAK+B,MAAMnB,KAAM,iBAAkB,qBAEhDA,KAAKuB,KAAKC,SAAS,GAAIlC,IACnBmC,MAAOzB,KAAKJ,KAAK8B,OAAOM,mBACxBJ,QAASxC,EAAK+B,MAAMnB,KAAM,iBAAkB,mBAIhDA,KAAKgB,kBAAkBQ,SAAS,GAAIjC,IAChCkC,MAAOzB,KAAKJ,KAAK8B,OAAOvB,WACxB8B,MAAOjC,KAAKuB,SAGpBW,WAAY,WACRlC,KAAKG,WAAWgC,SAEpBC,eAAgB,WACZpC,KAAKG,WAAWkC,WAAWrC,KAAKqB,mBAAoB,GAAGiB,KAAKlD,EAAK+B,MAAMnB,KAAM,aAEjFuC,aAAc,WACVvC,KAAKG,WAAWkC,WAAWrC,KAAKqB,mBAAoBrB,KAAKG,WAAWqC,MAAMC,OAAS,GAAGH,KAAKlD,EAAK+B,MAAMnB,KAAM,aAEhH8B,QAAS,WACL9B,KAAKG,WAAW2B,QAAQ9B,KAAKqB,mBAAoBrB,KAAKG,WAAWqC,MAAMC,OAAS,GAAGH,KAAKlD,EAAK+B,MAAMnB,KAAM,aAE7G0C,QAAS,WACD1C,KAAK2C,eAAiB3C,KAAK2C,aAAaC,MACxC5C,KAAK2C,aAAaE,SAElB7C,KAAKG,WAAWqC,MAAM,IAAMxC,KAAKG,WAAWqC,MAAM,IAClDxC,KAAKG,WAAW2C,iBAGxBC,kBAAmB,WACf/C,KAAKgD,eAAe,mBAExBC,gBAAiB,WACbjD,KAAKgD,eAAe,iBAExBA,eAAgB,SAAUE,GAClBC,WAAaA,UAAUC,YACvBD,UAAUC,YAAYC,mBAAmBjE,EAAK+B,MAAMnB,KAAM,kBAAmBkD,GAAM9D,EAAK+B,MAAMnB,KAAM,kBAEpGL,EAAM2D,QAAQ,iBACVC,MAAOvD,KAAKJ,KAAK4D,OAAOC,YAAYF,MACpCG,QAAS1D,KAAKJ,KAAK4D,OAAOC,YAAYC,QACtCC,MAAO,UACPC,QAAS,IACTC,QAAS,KAIrBC,gBAAiB,SAAUZ,EAAKa,GAC5B/D,KAAKqB,mBAAqB,GAAI5B,GAAMsE,EAAMC,OAAOC,UAAWF,EAAMC,OAAOE,SAAU,GAAIxE,IACnFyE,KAAM,QAEVnE,KAAKkD,MAETkB,cAAe,SAAUC,GACrB1E,EAAM2D,QAAQ,iBACVC,MAAOvD,KAAKJ,KAAK4D,OAAOc,SAASf,MACjCG,QAAS1D,KAAKJ,KAAK4D,OAAOc,SAASZ,QAAUW,EAAMX,QACnDC,MAAO,UACPC,QAAS,IACTC,QAAS","file":"Directions.js","sourcesContent":["define([\r\n    'dojo/_base/declare',\r\n    'dijit/_WidgetBase',\r\n    'dijit/_TemplatedMixin',\r\n    'esri/dijit/Directions',\r\n    'dojo/text!./Directions/templates/Directions.html',\r\n    'dojo/_base/lang',\r\n    'dijit/Menu',\r\n    'dijit/MenuItem',\r\n    'dijit/PopupMenuItem',\r\n    'dijit/MenuSeparator',\r\n    'esri/geometry/Point',\r\n    'esri/SpatialReference',\r\n    'dojo/topic',\r\n    'dojo/i18n!./Directions/nls/resource',\r\n    'dojo/dom-style'\r\n], function (declare, _WidgetBase, _TemplatedMixin, Directions, template, lang, Menu, MenuItem, PopupMenuItem, MenuSeparator, Point, SpatialReference, topic, i18n, domStyle) {\r\n\r\n    return declare([_WidgetBase, _TemplatedMixin], {\r\n        templateString: template,\r\n        i18n: i18n,\r\n        postCreate: function () {\r\n            this.inherited(arguments);\r\n            this.directions = new Directions(lang.mixin({\r\n                map: this.map\r\n            }, this.options), this.directionsNode);\r\n            this.directions.startup();\r\n\r\n            //temp fix for 3.12 and 3.13 map click button.\r\n            if (this.directions._activateButton) {\r\n                domStyle.set(this.directions._activateButton, 'display', 'none');\r\n            } else if (this.directions._activateButtonNode) {\r\n                domStyle.set(this.directions._activateButtonNode, 'display', 'none');\r\n                domStyle.set(this.directions._addDestinationNode, 'float', 'inherit');\r\n                domStyle.set(this.directions._optionsButtonNode, {\r\n                    'float': 'inherit',\r\n                    marginRight: '5px'\r\n                });\r\n            }\r\n\r\n            if (this.mapRightClickMenu) {\r\n                this.addRightClickMenu();\r\n            }\r\n        },\r\n        addRightClickMenu: function () {\r\n            // capture map right click position\r\n            this.map.on('MouseDown', lang.hitch(this, function (evt) {\r\n                this.mapRightClickPoint = evt.mapPoint;\r\n            }));\r\n\r\n            this.menu = new Menu();\r\n            this.menu.addChild(new MenuItem({\r\n                label: this.i18n.labels.directionsFromHere,\r\n                onClick: lang.hitch(this, 'directionsFrom')\r\n            }));\r\n            this.menu.addChild(new MenuItem({\r\n                label: this.i18n.labels.directionsToHere,\r\n                onClick: lang.hitch(this, 'directionsTo')\r\n            }));\r\n            this.menu.addChild(new MenuSeparator());\r\n            this.menu.addChild(new MenuItem({\r\n                label: this.i18n.labels.addStop,\r\n                onClick: lang.hitch(this, 'addStop')\r\n            }));\r\n            this.menu.addChild(new MenuSeparator());\r\n            this.menu.addChild(new MenuItem({\r\n                label: this.i18n.labels.useMyLocationAsStart,\r\n                onClick: lang.hitch(this, 'getGeoLocation', 'directionsFrom')\r\n            }));\r\n            this.menu.addChild(new MenuItem({\r\n                label: this.i18n.labels.useMyLocationAsEnd,\r\n                onClick: lang.hitch(this, 'getGeoLocation', 'directionsTo')\r\n            }));\r\n\r\n            // add this widgets menu as a sub menu to the map right click menu\r\n            this.mapRightClickMenu.addChild(new PopupMenuItem({\r\n                label: this.i18n.labels.directions,\r\n                popup: this.menu\r\n            }));\r\n        },\r\n        clearStops: function () {\r\n            this.directions.reset();\r\n        },\r\n        directionsFrom: function () {\r\n            this.directions.updateStop(this.mapRightClickPoint, 0).then(lang.hitch(this, 'doRoute'));\r\n        },\r\n        directionsTo: function () {\r\n            this.directions.updateStop(this.mapRightClickPoint, this.directions.stops.length - 1).then(lang.hitch(this, 'doRoute'));\r\n        },\r\n        addStop: function () {\r\n            this.directions.addStop(this.mapRightClickPoint, this.directions.stops.length - 1).then(lang.hitch(this, 'doRoute'));\r\n        },\r\n        doRoute: function () {\r\n            if (this.parentWidget && !this.parentWidget.open) {\r\n                this.parentWidget.toggle();\r\n            }\r\n            if (this.directions.stops[0] && this.directions.stops[1]) {\r\n                this.directions.getDirections();\r\n            }\r\n        },\r\n        startAtMyLocation: function () {\r\n            this.getGeoLocation('directionsFrom');\r\n        },\r\n        endAtMyLocation: function () {\r\n            this.getGeoLocation('directionsTo');\r\n        },\r\n        getGeoLocation: function (leg) {\r\n            if (navigator && navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition(lang.hitch(this, 'locationSuccess', leg), lang.hitch(this, 'locationError'));\r\n            } else {\r\n                topic.publish('growler/growl', {\r\n                    title: this.i18n.errors.geoLocation.title,\r\n                    message: this.i18n.errors.geoLocation.message,\r\n                    level: 'default',\r\n                    timeout: 10000,\r\n                    opacity: 1.0\r\n                });\r\n            }\r\n        },\r\n        locationSuccess: function (leg, event) {\r\n            this.mapRightClickPoint = new Point(event.coords.longitude, event.coords.latitude, new SpatialReference({\r\n                wkid: 4326\r\n            }));\r\n            this[leg]();\r\n        },\r\n        locationError: function (error) {\r\n            topic.publish('growler/growl', {\r\n                title: this.i18n.errors.location.title,\r\n                message: this.i18n.errors.location.message + error.message,\r\n                level: 'default',\r\n                timeout: 10000,\r\n                opacity: 1.0\r\n            });\r\n        }\r\n    });\r\n});\r\n"]}