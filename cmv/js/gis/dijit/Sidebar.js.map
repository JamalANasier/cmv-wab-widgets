{"version":3,"sources":["Sidebar.js"],"names":["define","declare","_WidgetBase","_TemplatedMixin","lang","array","domClass","domGeom","on","aspect","put","template","templateString","baseClass","defaultTabParams","tabIcon","tabTitle","viewPadding","top","left","right","bottom","showCloseIcon","collapseSyncNode","postCreate","this","inherited","arguments","init","tabs","contains","domNode","hitch","before","map","createTab","params","mixin","clone","tab","buttonNode","containerNode","closeBtnNode","tabsButtonNode","iconClass","tabsContainerNode","title","push","tabClickHandler","closeTab","openTab","_setViewPadding","dims","getContentBox","w","l","_viewPaddingHandler","extent","vp","width","h","height","res","Math","max","getWidth","getHeight","center","getCenter","result","expand","centerAt","x","y","forEach","childTab"],"mappings":"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","file":"Sidebar.js","sourcesContent":["define([\r\n    'dojo/_base/declare',\r\n    'dijit/_WidgetBase',\r\n    'dijit/_TemplatedMixin',\r\n\r\n    'dojo/_base/lang',\r\n    'dojo/_base/array',\r\n    'dojo/dom-class',\r\n    'dojo/dom-geometry',\r\n    'dojo/on',\r\n    'dojo/aspect',\r\n\r\n    'put-selector/put',\r\n\r\n    'dojo/text!./Sidebar/templates/Sidebar.html',\r\n\r\n    'xstyle/css!./Sidebar/css/Sidebar.css'\r\n\r\n], function (\r\n    declare,\r\n    _WidgetBase,\r\n    _TemplatedMixin,\r\n\r\n    lang,\r\n    array,\r\n    domClass,\r\n    domGeom,\r\n    on,\r\n    aspect,\r\n\r\n    put,\r\n\r\n    template\r\n) {\r\n    return declare([_WidgetBase, _TemplatedMixin], {\r\n        templateString: template,\r\n        baseClass: 'sidebar',\r\n\r\n        defaultTabParams: {\r\n            tabIcon: 'fa-bars',\r\n            tabTitle: 'Title'\r\n        },\r\n\r\n        viewPadding: {\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0\r\n        },\r\n\r\n        showCloseIcon: true,\r\n\r\n        collapseSyncNode: null,\r\n\r\n        postCreate: function () {\r\n            this.inherited(arguments);\r\n            this.init();\r\n        },\r\n\r\n        init: function () {\r\n            this.tabs = [];\r\n            if (this.collapseSyncNode) {\r\n                if (domClass.contains(this.domNode, 'collapsed')) {\r\n                    put(this.collapseSyncNode, '.collapsed');\r\n                }\r\n                //wire up css transition callback covering all event name bases\r\n                on(this.collapseSyncNode, 'transitionend, oTransitionEnd, webkitTransitionEnd, animationend, webkitAnimationEnd', lang.hitch(this, '_setViewPadding'));\r\n            }\r\n            aspect.before(this.map, 'setExtent', lang.hitch(this, '_viewPaddingHandler'));\r\n        },\r\n\r\n        createTab: function (params) {\r\n            params = lang.mixin(lang.clone(this.defaultTabParams), (params || {}));\r\n            var tab = {\r\n                buttonNode: null,\r\n                containerNode: null,\r\n                closeBtnNode: null\r\n            };\r\n            //create and place dom elements for the tab button and pane\r\n            tab.buttonNode = put(this.tabsButtonNode, 'li a[role=tab] i.fa.' + params.iconClass + '<<');\r\n            tab.containerNode = put(this.tabsContainerNode, 'div.' + this.baseClass + '-pane div.sidebar-pane-title $ <', params.title);\r\n\r\n            if (this.showCloseIcon) {\r\n                tab.closeBtnNode = put(tab.containerNode, 'i.fa.fa-times.closeIcon');\r\n                // listen for the tab close button click\r\n                on(tab.closeBtnNode, 'click', lang.hitch(this, 'tabClickHandler', tab));\r\n            }\r\n\r\n            // listen for the tab button click\r\n            on(tab.buttonNode, 'click', lang.hitch(this, 'tabClickHandler', tab));\r\n            //keep a refrence to this tab\r\n            this.tabs.push(tab);\r\n            //return the tabs pane node\r\n            return tab;\r\n        },\r\n\r\n        tabClickHandler: function (tab) {\r\n            if (domClass.contains(tab.buttonNode, 'active')) {\r\n                this.closeTab(tab);\r\n            } else {\r\n                this.openTab(tab);\r\n            }\r\n        },\r\n\r\n        _setViewPadding: function () {\r\n            var dims = domGeom.getContentBox(this.domNode);\r\n            this.viewPadding = {\r\n                top: 0,\r\n                left: dims.w + dims.l,\r\n                right: 0,\r\n                bottom: 0\r\n            };\r\n            this._viewPaddingHandler(this.map.extent);\r\n        },\r\n\r\n        _viewPaddingHandler: function (extent) {\r\n            var map = this.map,\r\n                vp = this.viewPadding,\r\n                w = map.width - vp.left - vp.right,\r\n                h = map.height - vp.top - vp.bottom,\r\n                res = Math.max(extent.getWidth() / w, extent.getHeight() / h),\r\n                center = extent.getCenter(),\r\n                result = map.extent.expand(res / (map.extent.getWidth() / map.width));\r\n            result = result.centerAt({\r\n                x: center.x - (vp.left - vp.right) * 0.5 * res,\r\n                y: center.y - (vp.top - vp.bottom) * 0.5 * res\r\n            });\r\n            return [result];\r\n        },\r\n\r\n        openTab: function (tab) {\r\n            array.forEach(this.tabs, function (childTab) {\r\n                put(childTab.buttonNode, '!active');\r\n                put(childTab.containerNode, '!active');\r\n            });\r\n            put(tab.buttonNode, '.active');\r\n            put(tab.containerNode, '.active');\r\n            put(this.tabsButtonNode, '.active');\r\n            put(this.domNode, '!collapsed');\r\n            if (this.collapseSyncNode) {\r\n                put(this.collapseSyncNode, '!collapsed');\r\n            }\r\n        },\r\n\r\n        closeTab: function () {\r\n            array.forEach(this.tabs, function (tab) {\r\n                put(tab.buttonNode, '!active');\r\n                put(this.tabsButtonNode, '!active');\r\n                put(tab.containerNode, '!active');\r\n            }, this);\r\n            put(this.domNode, '.collapsed');\r\n            if (this.collapseSyncNode) {\r\n                put(this.collapseSyncNode, '.collapsed');\r\n            }\r\n        }\r\n    });\r\n});"]}