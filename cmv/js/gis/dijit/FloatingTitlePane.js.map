{"version":3,"sources":["FloatingTitlePane.js"],"names":["define","declare","TitlePane","on","lang","Moveable","aspect","topic","has","win","winUtils","domGeom","domStyle","domConstruct","domAttr","domClass","ResizeHandle","sidebarPosition","canFloat","isFloating","isDragging","dragDelay","resizable","resizeOptions","isResizing","postCreate","this","createDomNodes","own","window","hitch","subscribe","after","inherited","arguments","startup","titleBarNode","_moveable","domNode","handle","delay","mover","prototype","onMouseUp","e","destroy","preventDefault","stopPropagation","_titleBarHeight","get","document","moveHandleNode","create","title","class","titleNode","dockHandleNode","style","evt","_dockWidget","stopImmediatePropagation","resOptions","mixin","targetId","id","activeResize","intermediateChanges","startTopic","endTopic","_resizer","placeAt","set","resizeHandle","toggle","resizing","_afterToggle","open","_updateTopic","_dragging","titleCursor","_checkSidebarPosition","computedStyle","getComputedStyle","containerNode","width","parseInt","sidebar","setContentSize","w","body","top","_moverBox","t","_startDrag","marginBox","_endDrag","nodePosition","position","viewport","getBox","ownerDocument","y","Math","min","max","h","x","_relativePosition","_position","setTimeout","contains","ownerDocumentBody","node","p","bb","l","floor","left","remove","dockedWidgets","getChildren","length","_initialDimensions","publish","_updateWidgetSidebarPosition","msg","widgetID","pos","action","k","len","widget","_resizing","newDim","_getNewCoords","_resizeDimensions","startSize","_startResize","getContentBox","_endResize","category","label","value"],"mappings":"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","file":"FloatingTitlePane.js","sourcesContent":["define([\r\n    'dojo/_base/declare',\r\n    'dijit/TitlePane',\r\n    'dojo/on',\r\n    'dojo/_base/lang',\r\n    'dojo/dnd/Moveable',\r\n    'dojo/aspect',\r\n    'dojo/topic',\r\n    'dojo/sniff',\r\n    'dojo/_base/window',\r\n    'dojo/window',\r\n    'dojo/dom-geometry',\r\n    'dojo/dom-style',\r\n    'dojo/dom-construct',\r\n    'dojo/dom-attr',\r\n    'dojo/dom-class',\r\n    'dojox/layout/ResizeHandle',\r\n    'xstyle/css!dojox/layout/resources/ResizeHandle.css',\r\n    'xstyle/css!./FloatingTitlePane/css/FloatingTitlePane.css'\r\n], function (declare, TitlePane, on, lang, Moveable, aspect, topic, has, win, winUtils, domGeom, domStyle, domConstruct, domAttr, domClass, ResizeHandle) {\r\n\r\n    return declare([TitlePane], {\r\n        sidebarPosition: null,\r\n\r\n        canFloat: false,\r\n        isFloating: false,\r\n        isDragging: false,\r\n        dragDelay: 3,\r\n\r\n        resizable: false,\r\n        resizeOptions: {},\r\n        isResizing: false,\r\n\r\n        postCreate: function () {\r\n            if (this.canFloat) {\r\n                this.createDomNodes();\r\n                this.own(on(window, 'resize', lang.hitch(this, '_endDrag')));\r\n            }\r\n            this.own(topic.subscribe('titlePane/event', lang.hitch(this, '_updateWidgetSidebarPosition')));\r\n            this.own(aspect.after(this, 'toggle', lang.hitch(this, '_afterToggle')));\r\n            this.inherited(arguments);\r\n        },\r\n        startup: function () {\r\n            if (this.titleBarNode && this.canFloat) {\r\n                this._moveable = new Moveable(this.domNode, {\r\n                    handle: this.titleBarNode,\r\n                    delay: this.dragDelay\r\n                });\r\n                if (this.dragDelay > 0) {\r\n                    this._moveable.mover.prototype.onMouseUp = function (e) {\r\n                        this.destroy();\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    };\r\n                }\r\n                this._titleBarHeight = domStyle.get(this.titleBarNode, 'height');\r\n                aspect.after(this._moveable, 'onMove', lang.hitch(this, '_dragging'), true);\r\n                aspect.after(this._moveable, 'onMoveStop', lang.hitch(this, '_endDrag'), true);\r\n                aspect.after(this._moveable, 'onMoveStart', lang.hitch(this, '_startDrag'), true);\r\n\r\n                // ensure that dragging the movable stops no matter\r\n                // when/where the mouse is released or a touch is completed\r\n                on(document, 'mouseup, touchend', lang.hitch(this, '_endDrag'));\r\n            }\r\n            this.inherited(arguments);\r\n        },\r\n        createDomNodes: function () {\r\n            this.moveHandleNode = domConstruct.create('span', {\r\n                title: 'Move widget',\r\n                'class': 'floatingWidgetPopout'\r\n            }, this.titleNode, 'after');\r\n\r\n            this.dockHandleNode = domConstruct.create('span', {\r\n                title: 'Dock widget',\r\n                style: 'display:none',\r\n                'class': 'floatingWidgetDock'\r\n            }, this.titleNode, 'after');\r\n            this.own(on(this.dockHandleNode, 'click', lang.hitch(this, function (evt) {\r\n                this._dockWidget();\r\n                evt.stopImmediatePropagation();\r\n            })));\r\n\r\n            if (this.resizable) {\r\n                var resOptions = lang.mixin({\r\n                    targetId: this.id,\r\n                    activeResize: true,\r\n                    intermediateChanges: true,\r\n                    startTopic: this.id + '/resize/start',\r\n                    endTopic: this.id + '/resize/end'\r\n                }, this.resizeOptions);\r\n                this._resizer = new ResizeHandle(resOptions).placeAt(this.id);\r\n                domStyle.set(this._resizer.resizeHandle, 'display', 'none');\r\n                on(this._resizer, 'resize', lang.hitch(this, '_resizing'), true);\r\n                this.own(topic.subscribe(this.id + '/resize/start', lang.hitch(this, '_startResize')));\r\n                this.own(topic.subscribe(this.id + '/resize/end', lang.hitch(this, '_endResize')));\r\n            }\r\n        },\r\n\r\n        /* Methods related to Toggling the TitleBar */\r\n        toggle: function () {\r\n            if ((this.isFloating && this.isDragging) || this.resizing) {\r\n                return;\r\n            }\r\n            this.inherited(arguments);\r\n        },\r\n        _afterToggle: function () {\r\n            var evt = this.open ? 'open' : 'close';\r\n            this._updateTopic(evt);\r\n        },\r\n\r\n        /* Methods for Dragging */\r\n        _dragging: function () {\r\n            this.isDragging = true;\r\n            if (!this.titleCursor) {\r\n                this.titleCursor = domStyle.get(this.titleBarNode, 'cursor');\r\n            }\r\n            domStyle.set(this.titleBarNode, 'cursor', 'move');\r\n            if (!this.isFloating) {\r\n                this._checkSidebarPosition();\r\n                domStyle.set(this.dockHandleNode, 'display', 'inline');\r\n                domStyle.set(this.moveHandleNode, 'display', 'none');\r\n                domStyle.set(this.domNode, 'z-index', '40');\r\n                var computedStyle = domStyle.getComputedStyle(this.containerNode);\r\n                var width = parseInt(domStyle.getComputedStyle(this.sidebar.containerNode).width, 10);\r\n                domGeom.setContentSize(this.domNode, {\r\n                    w: (width - 2)\r\n                }, computedStyle);\r\n                this.isFloating = true;\r\n                this.placeAt(win.body());\r\n                domStyle.set(this.domNode, {\r\n                    top: (this._moverBox.t - this._titleBarHeight) + 'px'\r\n                });\r\n\r\n                if (this.resizable && this._resizer && this._resizer.resizeHandle) {\r\n                    domStyle.set(this._resizer.resizeHandle, 'display', 'block');\r\n                }\r\n                this._updateTopic('undock');\r\n            }\r\n        },\r\n        _startDrag: function (mover) {\r\n            this._moverBox = mover.marginBox;\r\n        },\r\n        _endDrag: function () {\r\n            // summary:\r\n            //      Called after dragging the Dialog. Saves the position of the dialog in the viewport,\r\n            //      and also adjust position to be fully within the viewport, so user doesn't lose access to handle\r\n            var nodePosition = domGeom.position(this.domNode);\r\n            var viewport = winUtils.getBox(this.ownerDocument);\r\n            nodePosition.y = Math.min(Math.max(nodePosition.y, 0), (viewport.h - nodePosition.h));\r\n            nodePosition.x = Math.min(Math.max(nodePosition.x, 0), (viewport.w - nodePosition.w));\r\n            this._relativePosition = nodePosition;\r\n            this._position();\r\n            domStyle.set(this.titleBarNode, 'cursor', this.titleCursor);\r\n\r\n            //delayed slightly so the titlebar does not toggle\r\n            window.setTimeout(lang.hitch(this, function () {\r\n                this.isDragging = false;\r\n            }), 50);\r\n        },\r\n        _position: function () {\r\n            // summary:\r\n            //      Position the dialog in the viewport.  If no relative offset\r\n            //      in the viewport has been determined (by dragging, for instance),\r\n            //      center the dialog.  Otherwise, use the Dialog's stored relative offset,\r\n            //      adjusted by the viewport's scroll.\r\n            if (!domClass.contains(this.ownerDocumentBody, 'dojoMove')) { // don't do anything if called during auto-scroll\r\n                var node = this.domNode,\r\n                    viewport = winUtils.getBox(this.ownerDocument),\r\n                    p = this._relativePosition,\r\n                    bb = p ? null : domGeom.position(node),\r\n                    l = Math.floor(viewport.l + (p ? p.x : (viewport.w - bb.w) / 2)),\r\n                    t = Math.floor(viewport.t + (p ? p.y : (viewport.h - bb.h) / 2));\r\n                domStyle.set(node, {\r\n                    left: l + 'px',\r\n                    top: t + 'px'\r\n                });\r\n            }\r\n        },\r\n\r\n        /* Methods for Docking and Undocking */\r\n        _dockWidget: function () {\r\n            if (!this.isDragging) {\r\n                domAttr.remove(this.domNode, 'style');\r\n                domStyle.set(this.dockHandleNode, 'display', 'none');\r\n                domStyle.set(this.moveHandleNode, 'display', 'inline');\r\n                var dockedWidgets = this.sidebar.getChildren();\r\n                if (this.sidebarPosition > dockedWidgets.length || this.sidebarPosition < 0) {\r\n                    this.sidebarPosition = dockedWidgets.length;\r\n                }\r\n                this.placeAt(this.sidebar, this.sidebarPosition);\r\n                this.isFloating = false;\r\n                this._updateTopic('dock');\r\n            }\r\n            if (this.resizable && this._resizer && this._resizer.resizeHandle) {\r\n                domStyle.set(this._resizer.resizeHandle, 'display', 'none');\r\n                if (this._initialDimensions) {\r\n                    topic.publish(this.id + '/resize/resize', this._initialDimensions);\r\n                }\r\n            }\r\n        },\r\n        _updateWidgetSidebarPosition: function (msg) {\r\n            var id = msg.widgetID, pos = msg.sidebarPosition, action = msg.action;\r\n\r\n            // do nothing if the topic is from the same widget\r\n            // or this widget cannot float\r\n            // or if the action is not dock/undock\r\n            if (id === this.id || !this.canFloat || (action !== 'dock' && action !== 'undock')) {\r\n                return;\r\n            }\r\n\r\n            this._checkSidebarPosition();\r\n\r\n            // increment the position if the other widget is docked\r\n            // above this widget's position\r\n            if (action === 'dock') {\r\n                var dockedWidgets = this.sidebar.getChildren();\r\n                if (pos < this.sidebarPosition && this.sidebarPosition < dockedWidgets.length) {\r\n                    this.sidebarPosition++;\r\n                }\r\n\r\n            // decrement the position if the other widget is undocked\r\n            // above this widget's position\r\n            } else if (action === 'undock') {\r\n                if (pos < this.sidebarPosition && this.sidebarPosition > 0) {\r\n                    this.sidebarPosition--;\r\n                }\r\n            }\r\n        },\r\n        _checkSidebarPosition: function () {\r\n            // set the initial sidebar positions for all floating\r\n            // widgets in this same sidebar. This is done\r\n            // only once when the first widget is undocked.\r\n            var dockedWidgets = this.sidebar.getChildren();\r\n            if (this.sidebarPosition === null) {\r\n                var k = 0, len = dockedWidgets.length;\r\n                for (k = 0; k < len; k++) {\r\n                    var widget = dockedWidgets[k];\r\n                    if (widget.canFloat) {\r\n                        widget.sidebarPosition = k;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /* Methods for Resizing */\r\n        _resizing: function (evt) {\r\n            this.isResizing = true;\r\n            var newDim = this._resizer._getNewCoords(evt, this, 'margin');\r\n            if (newDim) {\r\n                topic.publish(this.id + '/resize/resize', {\r\n                    h: this._resizeDimensions.h + (newDim.h - this._resizer.startSize.h),\r\n                    w: this._resizeDimensions.w + (newDim.w - this._resizer.startSize.w)\r\n                });\r\n            }\r\n        },\r\n        _startResize: function () {\r\n            this.isResizing = true;\r\n            this._resizeDimensions = domGeom.getContentBox(this.containerNode);\r\n            if (!this._initialDimensions) {\r\n                this._initialDimensions = this._resizeDimensions;\r\n            }\r\n        },\r\n        _endResize: function () {\r\n            this.isResizing = false;\r\n            domStyle.set(this.domNode, 'height', 'auto');\r\n        },\r\n\r\n        _updateTopic: function (msg) {\r\n            topic.publish('titlePane/event', {\r\n                category: 'Titlepane Event',\r\n                action: msg,\r\n                label: this.title,\r\n                widgetID: this.id,\r\n                sidebarPosition: this.sidebarPosition,\r\n                value: msg\r\n            });\r\n        }\r\n    });\r\n});"]}