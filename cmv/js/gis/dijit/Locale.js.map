{"version":3,"sources":["Locale.js"],"names":["define","declare","_WidgetBase","_TemplatedMixin","lang","on","domStyle","array","kernel","ioQuery","DropDownButton","DropDownMenu","MenuItem","countries","template","i18n","templateString","baseClass","currentLocale","includeFlag","includeCountry","includeLanguage","languages","en","es","fr","pt","locales","postCreate","this","inherited","arguments","locale","parentWidget","toggleable","set","localeLabelContainer","menu","forEach","hitch","vals","split","language","label","country","icon","toLowerCase","toUpperCase","length","menuItem","id","iconClass","onClick","addChild","startup","button","dropDown","localeDropDownContainer","appendChild","domNode","switchLocale","newLocale","uri","window","location","href","qsObj","indexOf","qs","substring","queryToObject","pathname","objectToQuery"],"mappings":";;;;;AAAAA,QACI,qBACA,oBACA,wBAEA,kBACA,UACA,iBACA,mBACA,oBACA,gBAEA,4BACA,qBACA,iBAEA,qBAEA,2CACA,kCAEA,8FACA,sCACD,SACCC,EACAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEAC,EACAC,EACAC,EAEAC,EAEAC,EACAC,GAGA,MAAOd,IAASC,EAAaC,IACzBa,eAAgBF,EAChBC,KAAMA,EACNE,UAAW,iBAEXC,cAAe,KAEfC,aAAa,EACbC,gBAAgB,EAChBC,iBAAiB,EAEjBC,WACIC,GAAM,UACNC,GAAM,UACNC,GAAM,WACNC,GAAM,aAGVC,SACI,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAGJC,WAAY,WACRC,KAAKC,UAAUC,WAEfF,KAAKX,cAAgBV,EAAOwB,OAExBH,KAAKI,cACDJ,KAAKI,aAAaC,YAClB5B,EAAS6B,IAAIN,KAAKO,qBAAsB,UAAW,QAI3D,IAAIC,GAAO,GAAI1B,IACXM,UAAW,cAGfV,GAAM+B,QAAQT,KAAKF,QAASvB,EAAKmC,MAAMV,KAAM,SAAUG,GACnD,GAAIQ,GAAOR,EAAOS,MAAM,KAGpBC,EAAWb,KAAKP,UAAUkB,EAAK,GACnC,IAAIE,EAAU,CACV,GAAIC,GAAQ,GAAIC,EAAU,KAAMC,EAAO,IACnCL,GAAK,KACDX,KAAKV,cACL0B,EAAO,uBAAyBL,EAAK,GAAGM,eAE5CF,EAAU/B,EAAU2B,EAAK,GAAGO,eACxBH,GAAWf,KAAKT,iBAChBuB,EAAQC,IAGZf,KAAKR,kBACDsB,EAAMK,OAAS,IACfL,GAAS,OAEbA,GAASD,EAEb,IAAIO,GAAW,GAAIrC,IACfsC,GAAIlB,EACJW,MAAOA,EACPQ,UAAWN,EACXO,QAAShD,EAAKmC,MAAMV,KAAM,eAAgBG,IAE9CK,GAAKgB,SAASJ,OAGtBZ,EAAKiB,SAEL,IAAId,GAAOX,KAAKX,cAAcuB,MAAM,KAChCC,EAAWb,KAAKP,UAAUkB,EAAK,IAC/BG,EAAQ,GAAIC,EAAU,IACtBJ,GAAK,KACDX,KAAKV,cACLwB,EAAQ,mCAAqCH,EAAK,GAAGM,cAAgB,YAEzEF,EAAU/B,EAAU2B,EAAK,GAAGO,eACxBH,GAAWf,KAAKT,iBAChBuB,GAASC,GAETf,KAAKR,kBACDuB,GAAWf,KAAKT,iBAChBuB,GAAS,OAEbA,GAASD,GAIjB,IAAIa,GAAS,GAAI7C,IACbiC,MAAOA,EACPa,SAAUnB,GAGdR,MAAK4B,wBAAwBC,YAAYH,EAAOI,UAGpDC,aAAc,SAAUC,GACpB,GAAIA,IAAchC,KAAKX,cAAe,CAClC,GAAI4C,GAAMC,OAAOC,SAASC,KAAMC,IAChC,IAAIJ,EAAIK,QAAQ,MAAO,EAAI,CACvB,GAAIC,GAAKN,EAAIO,UAAUP,EAAIK,QAAQ,KAAO,EAAGL,EAAId,OACjDkB,GAAQzD,EAAQ6D,cAAcF,GAIlCF,EAAMlC,OAAS6B,EAGfE,OAAOC,SAAWD,OAAOC,SAASO,SAAW,IAAM9D,EAAQ+D,cAAcN","file":"Locale.js","sourcesContent":["define([\r\n    'dojo/_base/declare',\r\n    'dijit/_WidgetBase',\r\n    'dijit/_TemplatedMixin',\r\n\r\n    'dojo/_base/lang',\r\n    'dojo/on',\r\n    'dojo/dom-style',\r\n    'dojo/_base/array',\r\n    'dojo/_base/kernel',\r\n    'dojo/io-query',\r\n\r\n    'dijit/form/DropDownButton',\r\n    'dijit/DropDownMenu',\r\n    'dijit/MenuItem',\r\n\r\n    './Locale/countries',\r\n\r\n    'dojo/text!./Locale/templates/Locale.html',\r\n    'dojo/i18n!./Locale/nls/resource',\r\n\r\n    'xstyle/css!https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/2.3.1/css/flag-icon.min.css',\r\n    'xstyle/css!./Locale/css/Locale.css'\r\n], function (\r\n    declare,\r\n    _WidgetBase,\r\n    _TemplatedMixin,\r\n\r\n    lang,\r\n    on,\r\n    domStyle,\r\n    array,\r\n    kernel,\r\n    ioQuery,\r\n\r\n    DropDownButton,\r\n    DropDownMenu,\r\n    MenuItem,\r\n\r\n    countries,\r\n\r\n    template,\r\n    i18n\r\n) {\r\n\r\n    return declare([_WidgetBase, _TemplatedMixin], {\r\n        templateString: template,\r\n        i18n: i18n,\r\n        baseClass: 'cmvLocaleDijit',\r\n\r\n        currentLocale: null,\r\n\r\n        includeFlag: true,\r\n        includeCountry: true,\r\n        includeLanguage: true,\r\n\r\n        languages: {\r\n            'en': 'English',\r\n            'es': 'Español',\r\n            'fr': 'Français',\r\n            'pt': 'Português'\r\n        },\r\n\r\n        locales: [\r\n            'es-ar',\r\n            'es-bo',\r\n            'pt-br',\r\n            'en-ca',\r\n            'fr-ca',\r\n            'es-cl',\r\n            'es-co',\r\n            'es-cr',\r\n            'es-do',\r\n            'es-ec',\r\n            'es-sv',\r\n            'fr-FR',\r\n            'es-gt',\r\n            'fr-ht',\r\n            'es-hn',\r\n            'en-in',\r\n            'es-mx',\r\n            'es-pa',\r\n            'es-pe',\r\n            'es-pr',\r\n            'pt-pt',\r\n            'es-py',\r\n            'es-es',\r\n            'en-gb',\r\n            'en-us',\r\n            'es-us',\r\n            'es-uy',\r\n            'es-ve'\r\n        ],\r\n\r\n        postCreate: function () {\r\n            this.inherited(arguments);\r\n\r\n            this.currentLocale = kernel.locale;\r\n\r\n            if (this.parentWidget) {\r\n                if (this.parentWidget.toggleable) {\r\n                    domStyle.set(this.localeLabelContainer, 'display', 'block');\r\n                }\r\n            }\r\n\r\n            var menu = new DropDownMenu({\r\n                baseClass: 'localeMenu'\r\n            });\r\n\r\n            array.forEach(this.locales, lang.hitch(this, function (locale) {\r\n                var vals = locale.split('-');\r\n\r\n                // only include supported languages\r\n                var language = this.languages[vals[0]];\r\n                if (language) {\r\n                    var label = '', country = null, icon = null;\r\n                    if (vals[1]) {\r\n                        if (this.includeFlag) {\r\n                            icon = 'flag-icon flag-icon-' + vals[1].toLowerCase();\r\n                        }\r\n                        country = countries[vals[1].toUpperCase()];\r\n                        if (country && this.includeCountry) {\r\n                            label = country;\r\n                        }\r\n                    }\r\n                    if (this.includeLanguage) {\r\n                        if (label.length > 0) {\r\n                            label += ' - ';\r\n                        }\r\n                        label += language;\r\n                    }\r\n                    var menuItem = new MenuItem({\r\n                        id: locale,\r\n                        label: label,\r\n                        iconClass: icon,\r\n                        onClick: lang.hitch(this, 'switchLocale', locale)\r\n                    });\r\n                    menu.addChild(menuItem);\r\n                }\r\n            }));\r\n            menu.startup();\r\n\r\n            var vals = this.currentLocale.split('-');\r\n            var language = this.languages[vals[0]];\r\n            var label = '', country = null;\r\n            if (vals[1]) {\r\n                if (this.includeFlag) {\r\n                    label = '<div class=\"flag-icon flag-icon-' + vals[1].toLowerCase() + '\"></div>';\r\n                }\r\n                country = countries[vals[1].toUpperCase()];\r\n                if (country && this.includeCountry) {\r\n                    label += country;\r\n                }\r\n                if (this.includeLanguage) {\r\n                    if (country && this.includeCountry) {\r\n                        label += ' - ';\r\n                    }\r\n                    label += language;\r\n                }\r\n            }\r\n\r\n            var button = new DropDownButton({\r\n                label: label,\r\n                dropDown: menu\r\n            });\r\n\r\n            this.localeDropDownContainer.appendChild(button.domNode);\r\n        },\r\n\r\n        switchLocale: function (newLocale) {\r\n            if (newLocale !== this.currentLocale) {\r\n                var uri = window.location.href, qsObj = {};\r\n                if (uri.indexOf('?') > -1) {\r\n                    var qs = uri.substring(uri.indexOf('?') + 1, uri.length);\r\n                    qsObj = ioQuery.queryToObject(qs);\r\n                }\r\n\r\n                // set the new locale\r\n                qsObj.locale = newLocale;\r\n\r\n                // reload the page\r\n                window.location = window.location.pathname + '?' + ioQuery.objectToQuery(qsObj);\r\n\r\n            }\r\n        }\r\n    });\r\n});"]}