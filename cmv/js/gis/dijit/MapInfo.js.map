{"version":3,"sources":["MapInfo.js"],"names":["define","declare","WidgetBase","TemplatedMixin","lang","html","style","number","topic","proj4","map","mode","firstCoord","unitScale","showScale","showZoom","xLabel","yLabel","scaleLabel","zoomLabel","minWidth","proj4BaseURL","proj4Catalog","proj4Wkid","proj4CustomURL","_mode","_projection","_projectionLoaded","constructor","options","safeMixin","this","ts","fc","templateString","postCreate","loaded","_initialize","on","hitch","publish","source","error","destroy","wkid","spatialReference","window","key","String","defs","url","require","set","domNode","_setScale","_setZoom","_setCoords","evt","pnt","mapPoint","scale","_xCoord","round","x","_yCoord","y","_decToDMS","getLongitude","getLatitude","_project","projPnt","inverse","getScale","isNaN","scaleNode","format","zoomNode","getLevel","value","xNode","yNode","l","type","dir","abs","Math","deg","parseInt","min","minInt","sec","minIntTxt","secTxt"],"mappings":"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","file":"MapInfo.js","sourcesContent":["/*\r\n * show mouse coords, scale and zoom\r\n */\r\ndefine([\r\n    'dojo/_base/declare',\r\n    'dijit/_WidgetBase',\r\n    'dijit/_TemplatedMixin',\r\n    'dojo/_base/lang',\r\n    'dojo/html',\r\n    'dojo/dom-style',\r\n    'dojo/number',\r\n    'dojo/topic',\r\n    'proj4js/proj4',\r\n    'xstyle/css!./MapInfo/css/MapInfo.css'\r\n], function (\r\n    declare,\r\n    WidgetBase,\r\n    TemplatedMixin,\r\n    lang,\r\n    html,\r\n    style,\r\n    number,\r\n    topic,\r\n    proj4\r\n) {\r\n\r\n    return declare([WidgetBase, TemplatedMixin], {\r\n        map: null,\r\n        mode: 'map',\r\n        firstCoord: 'x',\r\n        unitScale: 2,\r\n        showScale: false,\r\n        showZoom: false,\r\n        xLabel: 'X:',\r\n        yLabel: 'Y:',\r\n        scaleLabel: '1:',\r\n        zoomLabel: 'Z:',\r\n        minWidth: 0,\r\n        proj4BaseURL: 'https://epsg.io/',\r\n        proj4Catalog: null,\r\n        proj4Wkid: null,\r\n        proj4CustomURL: null,\r\n        //0 = Web Mercator as grid\r\n        //1 = Web Mercator as dec or DMS\r\n        //2 = geographic as dec (grid) or DMS\r\n        //3 = grid unprojected\r\n        //4 = grid projected as dec or DMS\r\n        _mode: 0,\r\n        _projection: null,\r\n        _projectionLoaded: false,\r\n        constructor: function (options) {\r\n            declare.safeMixin(this, options || {});\r\n            //template\r\n            var ts = '<div class=\"gis-dijit-MapInfo\">';\r\n            if (this.showScale) {\r\n                ts += '${scaleLabel}<span data-dojo-attach-point=\"scaleNode\"></span>&nbsp;&nbsp;';\r\n            }\r\n            if (this.showZoom) {\r\n                ts += '${zoomLabel}<span data-dojo-attach-point=\"zoomNode\"></span>&nbsp;&nbsp;';\r\n            }\r\n            var fc = this.firstCoord;\r\n            if (fc === 'x') {\r\n                ts += '${xLabel}<span data-dojo-attach-point=\"xNode\"></span>&nbsp;&nbsp;${yLabel}<span data-dojo-attach-point=\"yNode\"></span>';\r\n            } else if (fc === 'y') {\r\n                ts += '${yLabel}<span data-dojo-attach-point=\"yNode\"></span>&nbsp;&nbsp;${xLabel}<span data-dojo-attach-point=\"xNode\"></span>';\r\n            } else {\r\n                this.firstCoord = 'x';\r\n                ts += '${xLabel}<span data-dojo-attach-point=\"xNode\"></span>&nbsp;&nbsp;${yLabel}<span data-dojo-attach-point=\"yNode\"></span>';\r\n            }\r\n            ts += '</div>';\r\n            this.templateString = ts;\r\n        },\r\n        postCreate: function () {\r\n            var map = this.map;\r\n            if (!map) {\r\n                topic.publish('viewer/handleError', {\r\n                    source: 'MapInfo',\r\n                    error: 'A map reference is required'\r\n                });\r\n                this.destroy();\r\n                return;\r\n            }\r\n            //initialize when map loaded\r\n            if (map.loaded) {\r\n                this._initialize(map);\r\n            } else {\r\n                map.on('load', lang.hitch(this, '_initialize', map));\r\n            }\r\n        },\r\n        _initialize: function (map) {\r\n            var wkid = map.spatialReference.wkid,\r\n                mode = this.mode;\r\n            if (wkid === 102100 && mode !== 'dec' && mode !== 'dms') {\r\n                this._mode = 0; //assume wm grid\r\n            } else if (wkid === 102100) {\r\n                this._mode = 1; //assume wm and proj to geo\r\n            } else if (wkid === 4326) {\r\n                this._mode = 2;\r\n            } else if (mode !== 'dec' && mode !== 'dms') {\r\n                this._mode = 3;\r\n            } else {\r\n                this._mode = 4;\r\n                if (!window.proj4) {\r\n                    window.proj4 = proj4;\r\n                }\r\n                if (this.proj4Wkid) {\r\n                    wkid = this.proj4Wkid;\r\n                }\r\n                //load custom projection file or default to epsg.io\r\n                if (!this.proj4Catalog && !wkid && !this.proj4CustomURL) {\r\n                    topic.publish('viewer/handleError', {\r\n                        source: 'MapInfo',\r\n                        error: 'MapInfo error::a proj4Catalog/proj4Wkid or custom URL must be defined'\r\n                    });\r\n                    return;\r\n                }\r\n                var key = this.proj4Catalog + ':' + String(wkid);\r\n                this._projection = key;\r\n                if (!proj4.defs[key]) {\r\n                    var url = this.proj4CustomURL || this.proj4BaseURL + String(wkid) + '.js';\r\n                    require([url], lang.hitch(this, function () {\r\n                        this._projectionLoaded = true;\r\n                    }));\r\n                }\r\n            }\r\n            if (this.minWidth) {\r\n                style.set(this.domNode, 'minWidth', this.minWidth + 'px');\r\n            }\r\n            if (this.showScale) {\r\n                this._setScale();\r\n                map.on('zoom-end', lang.hitch(this, '_setScale'));\r\n            }\r\n            if (this.showZoom) {\r\n                this._setZoom();\r\n                map.on('zoom-end', lang.hitch(this, '_setZoom'));\r\n            }\r\n            map.on('mouse-move, mouse-drag', lang.hitch(this, '_setCoords'));\r\n        },\r\n        _setCoords: function (evt) {\r\n            var pnt = evt.mapPoint,\r\n                mode = this.mode,\r\n                scale = this.unitScale;\r\n            switch (this._mode) {\r\n            case 0:\r\n            case 3:\r\n                this._xCoord(number.round(pnt.x, scale));\r\n                this._yCoord(number.round(pnt.y, scale));\r\n                break;\r\n            case 1:\r\n                if (mode === 'dms') {\r\n                    this._xCoord(this._decToDMS(pnt.getLongitude(), 'x'));\r\n                    this._yCoord(this._decToDMS(pnt.getLatitude(), 'y'));\r\n                } else {\r\n                    this._xCoord(number.round(pnt.getLongitude(), scale));\r\n                    this._yCoord(number.round(pnt.getLatitude(), scale));\r\n                }\r\n                break;\r\n            case 2:\r\n                if (mode === 'dms') {\r\n                    this._xCoord(this._decToDMS(pnt.x, 'x'));\r\n                    this._yCoord(this._decToDMS(pnt.y, 'y'));\r\n                } else {\r\n                    this._xCoord(number.round(pnt.x, scale));\r\n                    this._yCoord(number.round(pnt.y, scale));\r\n                }\r\n                break;\r\n            case 4:\r\n                if (this._projectionLoaded) {\r\n                    this._project(pnt);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n            }\r\n        },\r\n        _project: function (pnt) {\r\n            var projPnt = proj4(proj4.defs[this._projection]).inverse([pnt.x, pnt.y]);\r\n            if (this.mode === 'dms') {\r\n                this._xCoord(this._decToDMS(projPnt[0], 'x'));\r\n                this._yCoord(this._decToDMS(projPnt[1], 'y'));\r\n            } else {\r\n                this._xCoord(number.round(projPnt[0], this.unitScale));\r\n                this._yCoord(number.round(projPnt[1], this.unitScale));\r\n            }\r\n        },\r\n        _setScale: function () {\r\n            var scale = this.map.getScale();\r\n            if (scale === null || isNaN(scale)) {\r\n                return;\r\n            }\r\n            html.set(this.scaleNode, String(number.format(number.round(scale, 0))));\r\n        },\r\n        _setZoom: function () {\r\n            html.set(this.zoomNode, String(this.map.getLevel()));\r\n        },\r\n        _xCoord: function (value) {\r\n            html.set(this.xNode, String(value));\r\n        },\r\n        _yCoord: function (value) {\r\n            html.set(this.yNode, String(value));\r\n        },\r\n        _decToDMS: function (l, type) {\r\n            var dir = '?',\r\n                abs = Math.abs(l),\r\n                deg = parseInt(abs, 10),\r\n                min = (abs - deg) * 60,\r\n                minInt = parseInt(min, 10),\r\n                sec = number.round((min - minInt) * 60, this.unitScale),\r\n                minIntTxt = (minInt < 10) ? '0' + minInt : minInt,\r\n                secTxt = (sec < 10) ? '0' + sec : sec;\r\n            if (type === 'lat' || type === 'y') {\r\n                dir = (l > 0) ? 'N' : 'S';\r\n            }\r\n            if (type === 'lng' || type === 'x') {\r\n                dir = (l > 0) ? 'E' : 'W';\r\n            }\r\n            return deg + '&deg;' + minIntTxt + '\\'' + secTxt + '\"&nbsp;' + dir;\r\n        }\r\n    });\r\n});\r\n"]}