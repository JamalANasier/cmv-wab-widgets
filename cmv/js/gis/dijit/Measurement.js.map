{"version":3,"sources":["Measurement.js"],"names":["define","declare","_WidgetBase","Measurement","aspect","lang","domConstruct","topic","declaredClass","mapClickMode","postCreate","this","inherited","arguments","measure","map","defaultAreaUnit","defaultLengthUnit","create","placeAt","domNode","startup","after","hitch","own","subscribe","parentWidget","toggleable","onLayoutChange","open","checkMeasureTool","activeTool","disconnectMapClick","connectMapClick","publish","setMapClickMode","mode","setTool","clearResult"],"mappings":";;;;;AAAAA,QACI,qBACA,oBACA,yBACA,cACA,kBACA,qBACA,cACD,SAAUC,EAASC,EAAaC,EAAaC,EAAQC,EAAMC,EAAcC,GAExE,MAAON,IAASC,IACZM,cAAe,wBACfC,aAAc,KACdC,WAAY,WACRC,KAAKC,UAAUC,WACfF,KAAKG,QAAU,GAAIX,IACfY,IAAKJ,KAAKI,IACVC,gBAAiBL,KAAKK,gBACtBC,kBAAmBN,KAAKM,mBACzBX,EAAaY,OAAO,QAAQC,QAAQR,KAAKS,SAC5CT,KAAKG,QAAQO,UACbjB,EAAOkB,MAAMX,KAAKG,QAAS,UAAWT,EAAKkB,MAAMZ,KAAM,qBACvDP,EAAOkB,MAAMX,KAAKG,QAAS,YAAaT,EAAKkB,MAAMZ,KAAM,qBACzDA,KAAKa,IAAIjB,EAAMkB,UAAU,0BAA2BpB,EAAKkB,MAAMZ,KAAM,qBACjEA,KAAKe,cAAgBf,KAAKe,aAAaC,YACvChB,KAAKa,IAAIpB,EAAOkB,MAAMX,KAAKe,aAAc,SAAUrB,EAAKkB,MAAMZ,KAAM,WAChEA,KAAKiB,eAAejB,KAAKe,aAAaG,WAIlDC,iBAAkB,WAETnB,KAAKG,QAAQiB,YAA0C,KAA5BpB,KAAKG,QAAQiB,WAKZ,YAAtBpB,KAAKF,cACZE,KAAKqB,qBALqB,YAAtBrB,KAAKF,cACLE,KAAKsB,mBAOjBD,mBAAoB,WAChBzB,EAAM2B,QAAQ,0BAA2B,YAE7CD,gBAAiB,WACb1B,EAAM2B,QAAQ,4BAElBN,eAAgB,SAAUC,GAEjBA,GAA8B,YAAtBlB,KAAKF,cACdE,KAAKsB,mBAGbE,gBAAiB,SAAUC,GACvBzB,KAAKF,aAAe2B,EACP,YAATA,IACAzB,KAAKG,QAAQuB,QAAQ,QAAQ,GAC7B1B,KAAKG,QAAQuB,QAAQ,YAAY,GACjC1B,KAAKG,QAAQuB,QAAQ,YAAY,GACjC1B,KAAKG,QAAQwB","file":"Measurement.js","sourcesContent":["define([\r\n    'dojo/_base/declare',\r\n    'dijit/_WidgetBase',\r\n    'esri/dijit/Measurement',\r\n    'dojo/aspect',\r\n    'dojo/_base/lang',\r\n    'dojo/dom-construct',\r\n    'dojo/topic'\r\n], function (declare, _WidgetBase, Measurement, aspect, lang, domConstruct, topic) {\r\n\r\n    return declare([_WidgetBase], {\r\n        declaredClass: 'gis.dijit.Measurement',\r\n        mapClickMode: null,\r\n        postCreate: function () {\r\n            this.inherited(arguments);\r\n            this.measure = new Measurement({\r\n                map: this.map,\r\n                defaultAreaUnit: this.defaultAreaUnit,\r\n                defaultLengthUnit: this.defaultLengthUnit\r\n            }, domConstruct.create('div')).placeAt(this.domNode);\r\n            this.measure.startup();\r\n            aspect.after(this.measure, 'setTool', lang.hitch(this, 'checkMeasureTool'));\r\n            aspect.after(this.measure, 'closeTool', lang.hitch(this, 'checkMeasureTool'));\r\n            this.own(topic.subscribe('mapClickMode/currentSet', lang.hitch(this, 'setMapClickMode')));\r\n            if (this.parentWidget && this.parentWidget.toggleable) {\r\n                this.own(aspect.after(this.parentWidget, 'toggle', lang.hitch(this, function () {\r\n                    this.onLayoutChange(this.parentWidget.open);\r\n                })));\r\n            }\r\n        },\r\n        checkMeasureTool: function () {\r\n            // no measurement tool is active\r\n            if (!this.measure.activeTool || this.measure.activeTool === '') {\r\n                if (this.mapClickMode === 'measure') {\r\n                    this.connectMapClick();\r\n                }\r\n                // a measurement tool is active\r\n            } else if (this.mapClickMode !== 'measure') {\r\n                this.disconnectMapClick();\r\n            }\r\n        },\r\n        disconnectMapClick: function () {\r\n            topic.publish('mapClickMode/setCurrent', 'measure');\r\n        },\r\n        connectMapClick: function () {\r\n            topic.publish('mapClickMode/setDefault');\r\n        },\r\n        onLayoutChange: function (open) {\r\n            // end measurement on close of title pane\r\n            if (!open && this.mapClickMode === 'measure') {\r\n                this.connectMapClick();\r\n            }\r\n        },\r\n        setMapClickMode: function (mode) {\r\n            this.mapClickMode = mode;\r\n            if (mode !== 'measure') {\r\n                this.measure.setTool('area', false);\r\n                this.measure.setTool('distance', false);\r\n                this.measure.setTool('location', false);\r\n                this.measure.clearResult();\r\n            }\r\n        }\r\n    });\r\n});"]}