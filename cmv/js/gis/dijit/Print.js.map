{"version":3,"sources":["Print.js"],"names":["define","declare","_WidgetBase","_TemplatedMixin","_WidgetsInTemplateMixin","PrintTask","Memory","lang","array","topic","Style","domConstruct","domClass","locale","printTemplate","printResultTemplate","PrintTemplate","PrintParameters","esriRequest","urlUtils","i18n","PrintResultDijit","widgetsInTemplate","templateString","url","fileHandle","resultOrder","postCreate","this","inherited","arguments","then","hitch","_onPrintComplete","data","proxyRule","getProxyRule","proxyUrl","nameNode","innerHTML","docName","add","resultNode","_onPrintError","printResults","errorMessage","err","publish","source","error","_openPrint","window","open","_handleStatusUpdate","event","jobStatus","jobInfo","PrintDijit","map","count","results","authorText","copyrightText","defaultTitle","defaultFormat","defaultLayout","baseClass","pdfIcon","require","toUrl","imageIcon","printTaskURL","printTask","printparams","outSpatialReference","spatialReference","content","f","handleAs","callbackParamName","load","operationalLayersInspector","opLayers","forEach","layer","id","featureCollection","layers","fcLayer","featureSet","features","feature","attributes","symbol","font","family","_handleError","_handlePrintInfo","async","executionType","layoutTemplate","filter","parameters","param","name","length","layoutItems","choiceList","item","sort","a","b","layout","layoutDijit","set","defaultValue","Format","formatItems","format","formatDijit","print","printSettingsFormDijit","isValid","form","get","preserve","preserveFormDijit","mixin","layoutForm","layoutFormDijit","mapQualityForm","mapQualityFormDijit","mapOnlyForm","mapOnlyFormDijit","template","preserveScale","eval","label","title","exportOptions","layoutOptions","legendLayers","legend","titleText","scalebarUnit","execute","result","toString","icon","Date","formatLength","placeAt","printResultsNode","own","printGp","on","clearActionBarNode","validate","clearResults","empty"],"mappings":"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","file":"Print.js","sourcesContent":["/*eslint no-eval: 0 */\r\ndefine([\r\n    'dojo/_base/declare',\r\n    'dijit/_WidgetBase',\r\n    'dijit/_TemplatedMixin',\r\n    'dijit/_WidgetsInTemplateMixin',\r\n    'esri/tasks/PrintTask',\r\n    'dojo/store/Memory',\r\n    'dojo/_base/lang',\r\n    'dojo/_base/array',\r\n    'dojo/topic',\r\n    'dojo/dom-style',\r\n    'dojo/dom-construct',\r\n    'dojo/dom-class',\r\n    'dojo/date/locale',\r\n    'dojo/text!./Print/templates/Print.html',\r\n    'dojo/text!./Print/templates/PrintResult.html',\r\n    'esri/tasks/PrintTemplate',\r\n    'esri/tasks/PrintParameters',\r\n    'esri/request',\r\n    'esri/urlUtils',\r\n    'dojo/i18n!./Print/nls/resource',\r\n\r\n    'dijit/form/Form',\r\n    'dijit/form/FilteringSelect',\r\n    'dijit/form/ValidationTextBox',\r\n    'dijit/form/NumberTextBox',\r\n    'dijit/form/Button',\r\n    'dijit/form/CheckBox',\r\n    'dijit/ProgressBar',\r\n    'dijit/form/DropDownButton',\r\n    'dijit/TooltipDialog',\r\n    'dijit/form/RadioButton',\r\n    'xstyle/css!./Print/css/Print.css'\r\n], function (declare, _WidgetBase, _TemplatedMixin, _WidgetsInTemplateMixin, PrintTask, Memory, lang, array, topic, Style, domConstruct, domClass, locale, printTemplate, printResultTemplate, PrintTemplate, PrintParameters, esriRequest, urlUtils, i18n) {\r\n\r\n    // Print result dijit\r\n    var PrintResultDijit = declare([_WidgetBase, _TemplatedMixin, _WidgetsInTemplateMixin], {\r\n        widgetsInTemplate: true,\r\n        templateString: printResultTemplate,\r\n        i18n: i18n,\r\n        url: null,\r\n        fileHandle: null,\r\n        resultOrder: 'last', // first or last\r\n\r\n        postCreate: function () {\r\n            this.inherited(arguments);\r\n            this.fileHandle.then(lang.hitch(this, '_onPrintComplete'), lang.hitch(this, '_onPrintError'));\r\n        },\r\n        _onPrintComplete: function (data) {\r\n            if (data.url) {\r\n                var proxyRule = urlUtils.getProxyRule(data.url);\r\n                if (proxyRule && proxyRule.proxyUrl) {\r\n                    this.url = proxyRule.proxyUrl + '?' + data.url;\r\n                } else {\r\n                    this.url = data.url;\r\n                }\r\n                this.nameNode.innerHTML = '<span class=\"bold\">' + this.docName + '</span>';\r\n                domClass.add(this.resultNode, 'printResultHover');\r\n            } else {\r\n                this._onPrintError(this.i18n.printResults.errorMessage);\r\n            }\r\n        },\r\n        _onPrintError: function (err) {\r\n            topic.publish('viewer/handleError', {\r\n                source: 'Print',\r\n                error: err\r\n            });\r\n            this.nameNode.innerHTML = '<span class=\"bold\">' + i18n.printResults.errorMessage + '</span>';\r\n            domClass.add(this.resultNode, 'printResultError');\r\n        },\r\n        _openPrint: function () {\r\n            if (this.url !== null) {\r\n                window.open(this.url);\r\n            }\r\n        },\r\n        _handleStatusUpdate: function (event) {\r\n            var jobStatus = event.jobInfo.jobStatus;\r\n            if (jobStatus === 'esriJobFailed') {\r\n                this._onPrintError(this.i18n.printResults.errorMessage);\r\n            }\r\n        }\r\n    });\r\n\r\n    // Main print dijit\r\n    var PrintDijit = declare([_WidgetBase, _TemplatedMixin, _WidgetsInTemplateMixin], {\r\n        widgetsInTemplate: true,\r\n        templateString: printTemplate,\r\n        i18n: i18n,\r\n        map: null,\r\n        count: 1,\r\n        results: [],\r\n        authorText: null,\r\n        copyrightText: null,\r\n        defaultTitle: null,\r\n        defaultFormat: null,\r\n        defaultLayout: null,\r\n        baseClass: 'gis_PrintDijit',\r\n        pdfIcon: require.toUrl('gis/dijit/Print/images/pdf.png'),\r\n        imageIcon: require.toUrl('gis/dijit/Print/images/image.png'),\r\n        printTaskURL: null,\r\n        printTask: null,\r\n        postCreate: function () {\r\n            this.inherited(arguments);\r\n            this.printparams = new PrintParameters();\r\n            this.printparams.map = this.map;\r\n            this.printparams.outSpatialReference = this.map.spatialReference;\r\n\r\n            esriRequest({\r\n                url: this.printTaskURL,\r\n                content: {\r\n                    f: 'json'\r\n                },\r\n                handleAs: 'json',\r\n                callbackParamName: 'callback',\r\n                load: lang.hitch(this, '_handlePrintInfo'),\r\n                error: lang.hitch(this, '_handleError')\r\n            });\r\n            //aspect.after(this.printTask, '_createOperationalLayers', this.operationalLayersInspector, false);\r\n        },\r\n        operationalLayersInspector: function (opLayers) {\r\n            array.forEach(opLayers, function (layer) {\r\n                if (layer.id === 'Measurement_graphicslayer') {\r\n                    array.forEach(layer.featureCollection.layers, function (fcLayer) {\r\n                        array.forEach(fcLayer.featureSet.features, function (feature) {\r\n                            delete feature.attributes;\r\n                            feature.symbol.font.family = 'Courier';\r\n                            //feature.symbol.font.variant = esri.symbol.Font.VARIANT_NORMAL;\r\n                            //feature.symbol.font.size = '32pt';\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n            return opLayers;\r\n        },\r\n        _handleError: function (err) {\r\n            topic.publish('viewer/handleError', {\r\n                source: 'Print',\r\n                error: err\r\n            });\r\n        },\r\n        _handlePrintInfo: function (data) {\r\n            this.printTask = new PrintTask(this.printTaskURL, {\r\n                async: data.executionType === 'esriExecutionTypeAsynchronous'\r\n            });\r\n            var layoutTemplate = array.filter(data.parameters, function (param) {\r\n                return param.name === 'Layout_Template';\r\n            });\r\n            if (layoutTemplate.length === 0) {\r\n                topic.publish('viewer/handleError', {\r\n                    source: 'Print',\r\n                    error: 'Print service parameters name for templates must be \\'Layout_Template\\''\r\n                });\r\n                return;\r\n            }\r\n            var layoutItems = array.map(layoutTemplate[0].choiceList, function (item) {\r\n                return {\r\n                    name: item,\r\n                    id: item\r\n                };\r\n            });\r\n            layoutItems.sort(function (a, b) {\r\n                return (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0);\r\n            });\r\n            var layout = new Memory({\r\n                data: layoutItems\r\n            });\r\n            this.layoutDijit.set('store', layout);\r\n            if (this.defaultLayout) {\r\n                this.layoutDijit.set('value', this.defaultLayout);\r\n            } else {\r\n                this.layoutDijit.set('value', layoutTemplate[0].defaultValue);\r\n            }\r\n\r\n            var Format = array.filter(data.parameters, function (param) {\r\n                return param.name === 'Format';\r\n            });\r\n            if (Format.length === 0) {\r\n                topic.publish('viewer/handleError', {\r\n                    source: 'Print',\r\n                    error: 'Print service parameters name for format must be \\'Format\\''\r\n                });\r\n                return;\r\n            }\r\n            var formatItems = array.map(Format[0].choiceList, function (item) {\r\n                return {\r\n                    name: item,\r\n                    id: item\r\n                };\r\n            });\r\n            formatItems.sort(function (a, b) {\r\n                return (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0);\r\n            });\r\n            var format = new Memory({\r\n                data: formatItems\r\n            });\r\n            this.formatDijit.set('store', format);\r\n            if (this.defaultFormat) {\r\n                this.formatDijit.set('value', this.defaultFormat);\r\n            } else {\r\n                this.formatDijit.set('value', Format[0].defaultValue);\r\n            }\r\n\r\n        },\r\n        print: function () {\r\n            if (this.printSettingsFormDijit.isValid()) {\r\n                var form = this.printSettingsFormDijit.get('value');\r\n                var preserve = this.preserveFormDijit.get('value');\r\n                lang.mixin(form, preserve);\r\n                var layoutForm = this.layoutFormDijit.get('value');\r\n                var mapQualityForm = this.mapQualityFormDijit.get('value');\r\n                var mapOnlyForm = this.mapOnlyFormDijit.get('value');\r\n                lang.mixin(mapOnlyForm, mapQualityForm);\r\n\r\n                var template = new PrintTemplate();\r\n                template.format = form.format;\r\n                template.layout = form.layout;\r\n                template.preserveScale = eval(form.preserveScale); //turns a string 'true' into true\r\n                template.label = form.title;\r\n                template.exportOptions = mapOnlyForm;\r\n                template.layoutOptions = {\r\n                    authorText: this.authorText,\r\n                    copyrightText: this.copyrightText,\r\n                    legendLayers: (layoutForm.legend.length > 0 && layoutForm.legend[0]) ? null : [],\r\n                    titleText: form.title,\r\n                    scalebarUnit: layoutForm.scalebarUnit\r\n                };\r\n                this.printparams.template = template;\r\n\r\n                var fileHandle = this.printTask.execute(this.printparams);\r\n                var result = new PrintResultDijit({\r\n                    count: this.count.toString(),\r\n                    icon: (form.format === 'PDF') ? this.pdfIcon : this.imageIcon,\r\n                    docName: form.title,\r\n                    title: form.format + ', ' + form.layout + ', ' + locale.format(new Date(), {formatLength: 'short'}),\r\n                    fileHandle: fileHandle\r\n                }).placeAt(this.printResultsNode, this.resultOrder);\r\n\r\n                if (this.printTask.async) {\r\n                    result.own(this.printTask.printGp.on('status-update', lang.hitch(result, '_handleStatusUpdate')));\r\n                }\r\n\r\n\r\n                Style.set(this.clearActionBarNode, 'display', 'block');\r\n                this.count++;\r\n            } else {\r\n                this.printSettingsFormDijit.validate();\r\n            }\r\n        },\r\n        clearResults: function () {\r\n            domConstruct.empty(this.printResultsNode);\r\n            Style.set(this.clearActionBarNode, 'display', 'none');\r\n            this.count = 1;\r\n        }\r\n    });\r\n\r\n    return PrintDijit;\r\n});"]}