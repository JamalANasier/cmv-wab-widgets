{"version":3,"sources":["_WebMapMixin.js"],"names":["define","declare","lang","array","arcgisUtils","units","i18n","_initWebMap","webMapId","container","webMapOptions","mapOptions","this","config","mapDeferred","createMap","then","hitch","response","webMap","clickEventHandle","clickEventListener","itemInfo","map","_initWebMapLayerInfos","_initWebMapWidgets","layerControlLayerInfos","itemData","layerTypes","CSV","ArcGISMapServiceLayer","ArcGISFeatureLayer","GeoRSSLayer","ArcGISImageServiceLayer","esri/layers/ArcGISImageServiceVectorLayer","KML","ArcGISStreamLayer","ArcGISTiledMapServiceLayer","VectorTileLayer","WebTiledLayer","WMS","operationalLayers","forEach","layer","layerType","push","layerObject","type","title","legendLayerInfos","getLegendLayers","widgets","bookmarks","length","mixinDeep","include","id","path","open","position","options","editable","applicationProperties","viewing","basemapGallery","enabled","basemaps","srcNodeRef","routing","directions","viewer","mapRightClickMenu","routeTaskUrl","routeParams","directionsLanguage","directionsLengthUnits","MILES","active","measure","mapClickMode","defaultAreaUnit","SQUARE_MILES","defaultLengthUnit","search","visible","enableButtonMode","expanded","disablePlaceFinder","hintText","layers","timeSlider","mixin","slider"],"mappings":";;;;;AAAAA,QACI,qBACA,kBACA,mBAEA,oBACA,aAEA,6BAED,SACCC,EACAC,EACAC,EAEAC,EACAC,EAEAC,GAEA,MAAOL,GAAQ,MAEXM,YAAa,SAAUC,EAAUC,EAAWC,GACxCA,EAAgBA,OACXA,EAAcC,YAAcC,KAAKC,OAAOF,aACzCD,EAAcC,WAAaC,KAAKC,OAAOF,WAG3C,IAAIG,GAAcV,EAAYW,UAAUP,EAAUC,EAAWC,EAe7D,OAdAI,GAAYE,KAAKd,EAAKe,MAAML,KAAM,SAAUM,GACxCN,KAAKO,QACDC,iBAAkBF,EAASE,iBAC3BC,mBAAoBH,EAASG,mBAC7BC,SAAUJ,EAASI,UAEvBV,KAAKW,IAAML,EAASK,IAGpBX,KAAKY,sBAAsBN,GAG3BN,KAAKa,mBAAmBP,MAErBJ,GAIXU,sBAAuB,SAAUN,GAC7B,GAAIN,KAAKC,OAAOa,uBAEZd,KAAKc,uBAAyBd,KAAKC,OAAOa,2BAEvC,IAAIR,EAASI,UAAYJ,EAASI,SAASK,SAAU,CAIxD,GAAIC,IACAC,IAAO,MACPC,sBAAyB,UACzBC,mBAAsB,UACtBC,YAAe,SACfC,wBAA2B,QAC3BC,4CAA6C,cAC7CC,IAAO,MACPC,kBAAqB,SACrBC,2BAA8B,QAC9BC,gBAAmB,aACnBC,cAAiB,WACjBC,IAAO,OAePC,EAAoBvB,EAASI,SAASK,SAASc,iBACnDtC,GAAMuC,QAAQD,EAAmBvC,EAAKe,MAAML,KAAM,SAAU+B,GACxD,GAAIC,GAAYhB,EAAWe,EAAMC,UAC7BA,IACAhC,KAAKc,uBAAuBmB,MACxBF,MAAOA,EAAMG,YACbC,KAAMH,EACNI,MAAOL,EAAMK,WAMzBpC,KAAKC,OAAOoC,iBAEZrC,KAAKqC,iBAAmBrC,KAAKC,OAAOoC,iBAGpCrC,KAAKqC,iBAAmB7C,EAAY8C,gBAAgBhC,IAI5DO,mBAAoB,SAAUP,GAC1B,GAAKA,EAASI,UAAaJ,EAASI,SAASK,SAA7C,CAKA,GAAIwB,GAAUvC,KAAKC,OAAOsC,QAEtBC,EAAYlC,EAASI,SAASK,SAASyB,SAkB3C,IAjBIA,GAAaA,EAAUC,OAAS,IAChCF,EAAQC,UAAYxC,KAAK0C,WACrBC,SAAS,EACTC,GAAI,YACJT,KAAM,YACNU,KAAM,sBACNT,MAAO,YACPU,MAAM,EACNC,SAAU,IACVC,SACIrC,KAAK,EACLsC,UAAU,EACVT,UAAWA,IAEhBD,EAAQC,gBAGXlC,EAASI,SAASK,SAASmC,sBAAuB,CAElD,GAAIC,GAAU7C,EAASI,SAASK,SAASmC,sBAAsBC,OAG3DA,GAAQC,gBAAkBD,EAAQC,eAAeC,UAC5Cd,EAAQe,UAAaf,EAAQe,SAASX,UACvCJ,EAAQa,eAAiBpD,KAAK0C,WAC1BC,SAAS,EACTC,GAAI,iBACJT,KAAM,UACNU,KAAM,2BACNU,WAAY,gBACZP,SACIrC,KAAK,IAEV4B,EAAQa,sBAIfD,EAAQK,SAAWL,EAAQK,QAAQH,UACnCd,EAAQkB,WAAazD,KAAK0C,WACtBC,SAAS,EACTC,GAAI,aACJT,KAAM,YACNU,KAAM,uBACNT,MAAO1C,EAAKgE,OAAOnB,QAAQkB,WAC3BX,MAAM,EACNC,SAAU,IACVC,SACIrC,KAAK,EACLgD,mBAAmB,EACnBX,SACIY,aAAc,yFACdC,aACIC,mBAAoB,QACpBC,sBAAuBtE,EAAMuE,OAEjCC,QAAQ,KAGjB1B,EAAQkB,iBAGXN,EAAQe,SAAWf,EAAQe,QAAQb,UACnCd,EAAQ2B,QAAUlE,KAAK0C,WACnBC,SAAS,EACTC,GAAI,cACJT,KAAM,YACNU,KAAM,wBACNT,MAAO1C,EAAKgE,OAAOnB,QAAQ2B,QAC3BpB,MAAM,EACNC,SAAU,IACVC,SACIrC,KAAK,EACLwD,cAAc,EACdC,gBAAiB3E,EAAM4E,aACvBC,kBAAmB7E,EAAMuE,QAE9BzB,EAAQ2B,cAGXf,EAAQoB,QAAUpB,EAAQoB,OAAOlB,UACjCd,EAAQgC,OAASvE,KAAK0C,WAClBC,SAAS,EACTR,KAAM,UACNU,KAAM,oBACNU,WAAY,iBACZP,SACIrC,KAAK,EACL6D,SAAS,EACTC,kBAAkB,EAClBC,UAAU,EACVC,mBAAoBxB,EAAQoB,OAAOI,mBACnCC,SAAUzB,EAAQoB,OAAOK,SACzBC,OAAQ1B,EAAQoB,OAAOM,SAE5BtC,EAAQgC,aAKnB,GAAIjE,EAASI,SAASK,SAASwB,QAAS,CACpC,GAAIuC,GAAaxE,EAASI,SAASK,SAASwB,QAAQuC,UAChDA,KACAvC,EAAQuC,WAAa9E,KAAK0C,WACtBC,SAAS,EACTR,KAAM,UACNU,KAAM,wBACNU,WAAY,iBACZP,QAAS1D,EAAKyF,OACVpE,KAAK,GACNmE,IACJvC,EAAQyC","file":"_WebMapMixin.js","sourcesContent":["define([\r\n    'dojo/_base/declare',\r\n    'dojo/_base/lang',\r\n    'dojo/_base/array',\r\n\r\n    'esri/arcgis/utils',\r\n    'esri/units',\r\n\r\n    'dojo/i18n!config/nls/main'\r\n\r\n], function (\r\n    declare,\r\n    lang,\r\n    array,\r\n\r\n    arcgisUtils,\r\n    units,\r\n\r\n    i18n\r\n) {\r\n    return declare(null, {\r\n\r\n        _initWebMap: function (webMapId, container, webMapOptions) {\r\n            webMapOptions = webMapOptions || {};\r\n            if (!webMapOptions.mapOptions && this.config.mapOptions) {\r\n                webMapOptions.mapOptions = this.config.mapOptions;\r\n            }\r\n\r\n            var mapDeferred = arcgisUtils.createMap(webMapId, container, webMapOptions);\r\n            mapDeferred.then(lang.hitch(this, function (response) {\r\n                this.webMap = {\r\n                    clickEventHandle: response.clickEventHandle,\r\n                    clickEventListener: response.clickEventListener,\r\n                    itemInfo: response.itemInfo\r\n                };\r\n                this.map = response.map;\r\n\r\n                // get the layerInfos from the webmap\r\n                this._initWebMapLayerInfos(response);\r\n\r\n                // add any widgets included in the webmap\r\n                this._initWebMapWidgets(response);\r\n            }));\r\n            return mapDeferred;\r\n\r\n        },\r\n\r\n        _initWebMapLayerInfos: function (response) {\r\n            if (this.config.layerControlLayerInfos) {\r\n                // get the layerInfos for the layerControl widget from the config\r\n                this.layerControlLayerInfos = this.config.layerControlLayerInfos;\r\n\r\n            } else if (response.itemInfo && response.itemInfo.itemData) {\r\n                // get the layerInfos for the layerControl widget from the webmap\r\n\r\n                // https://developers.arcgis.com/web-map-specification/objects/operationalLayers/\r\n                var layerTypes = {\r\n                    'CSV': 'csv',\r\n                    'ArcGISMapServiceLayer': 'dynamic',\r\n                    'ArcGISFeatureLayer': 'feature',\r\n                    'GeoRSSLayer': 'georss',\r\n                    'ArcGISImageServiceLayer': 'image',\r\n                    'esri/layers/ArcGISImageServiceVectorLayer': 'imagevector',\r\n                    'KML': 'kml',\r\n                    'ArcGISStreamLayer': 'stream',\r\n                    'ArcGISTiledMapServiceLayer': 'tiled',\r\n                    'VectorTileLayer': 'vectortile',\r\n                    'WebTiledLayer': 'webtiled',\r\n                    'WMS': 'wms'\r\n\r\n                    /*\r\n                        Are these supported in Webmaps?\r\n\r\n                        'dataadapter': 'esri/layer/DataAdapterFeatureLayer', //untested\r\n                        label: 'esri/layers/LabelLayer', //untested\r\n                        mapimage: 'esri/layers/MapImageLayer', //untested\r\n                        osm: 'esri/layers/OpenStreetMapLayer',\r\n                        raster: 'esri/layers/RasterLayer',\r\n                        'wfs': 'esri/layers/WFSLayer',\r\n                        'esri/layers/WMTS': 'wmts'\r\n                    */\r\n                };\r\n\r\n                var operationalLayers = response.itemInfo.itemData.operationalLayers;\r\n                array.forEach(operationalLayers, lang.hitch(this, function (layer) {\r\n                    var layerType = layerTypes[layer.layerType];\r\n                    if (layerType) {\r\n                        this.layerControlLayerInfos.push({\r\n                            layer: layer.layerObject,\r\n                            type: layerType,\r\n                            title: layer.title\r\n                        });\r\n                    }\r\n                }));\r\n            }\r\n\r\n            if (this.config.legendLayerInfos) {\r\n                // get the layerInfos for the legend widget from the config\r\n                this.legendLayerInfos = this.config.legendLayerInfos;\r\n            } else {\r\n                // get the layerInfos for the legend widget from the webmap\r\n                this.legendLayerInfos = arcgisUtils.getLegendLayers(response);\r\n            }\r\n        },\r\n\r\n        _initWebMapWidgets: function (response) {\r\n            if (!response.itemInfo || !response.itemInfo.itemData) {\r\n                return;\r\n            }\r\n\r\n            // existing widgets if any\r\n            var widgets = this.config.widgets;\r\n\r\n            var bookmarks = response.itemInfo.itemData.bookmarks;\r\n            if (bookmarks && bookmarks.length > 0) {\r\n                widgets.bookmarks = this.mixinDeep({\r\n                    include: true,\r\n                    id: 'bookmarks',\r\n                    type: 'titlePane',\r\n                    path: 'gis/dijit/Bookmarks',\r\n                    title: 'Bookmarks',\r\n                    open: false,\r\n                    position: 999,\r\n                    options: {\r\n                        map: true,\r\n                        editable: false,\r\n                        bookmarks: bookmarks\r\n                    }\r\n                }, widgets.bookmarks || {});\r\n            }\r\n\r\n            if (response.itemInfo.itemData.applicationProperties) {\r\n                // https://developers.arcgis.com/web-map-specification/objects/viewing/\r\n                var viewing = response.itemInfo.itemData.applicationProperties.viewing;\r\n                // possible widgets: basemapGallery, measure, routing, search\r\n\r\n                if (viewing.basemapGallery && viewing.basemapGallery.enabled) {\r\n                    if (!widgets.basemaps || !widgets.basemaps.include) { // basemap gallery widget and basemaps widget cannot co-exist\r\n                        widgets.basemapGallery = this.mixinDeep({\r\n                            include: true,\r\n                            id: 'basemapGallery',\r\n                            type: 'domNode',\r\n                            path: 'gis/dijit/BasemapGallery',\r\n                            srcNodeRef: 'basemapsDijit',\r\n                            options: {\r\n                                map: true\r\n                            }\r\n                        }, widgets.basemapGallery || {});\r\n                    }\r\n                }\r\n\r\n                if (viewing.routing && viewing.routing.enabled) {\r\n                    widgets.directions = this.mixinDeep({\r\n                        include: true,\r\n                        id: 'directions',\r\n                        type: 'titlePane',\r\n                        path: 'gis/dijit/Directions',\r\n                        title: i18n.viewer.widgets.directions,\r\n                        open: false,\r\n                        position: 999,\r\n                        options: {\r\n                            map: true,\r\n                            mapRightClickMenu: true,\r\n                            options: {\r\n                                routeTaskUrl: 'https://sampleserver3.arcgisonline.com/ArcGIS/rest/services/Network/USA/NAServer/Route',\r\n                                routeParams: {\r\n                                    directionsLanguage: 'en-US',\r\n                                    directionsLengthUnits: units.MILES\r\n                                },\r\n                                active: false //for 3.12, starts active by default, which we dont want as it interfears with mapClickMode\r\n                            }\r\n                        }\r\n                    }, widgets.directions || {});\r\n                }\r\n\r\n                if (viewing.measure && viewing.measure.enabled) {\r\n                    widgets.measure = this.mixinDeep({\r\n                        include: true,\r\n                        id: 'measurement',\r\n                        type: 'titlePane',\r\n                        path: 'gis/dijit/Measurement',\r\n                        title: i18n.viewer.widgets.measure,\r\n                        open: false,\r\n                        position: 999,\r\n                        options: {\r\n                            map: true,\r\n                            mapClickMode: true,\r\n                            defaultAreaUnit: units.SQUARE_MILES,\r\n                            defaultLengthUnit: units.MILES\r\n                        }\r\n                    }, widgets.measure || {});\r\n                }\r\n\r\n                if (viewing.search && viewing.search.enabled) {\r\n                    widgets.search = this.mixinDeep({\r\n                        include: true,\r\n                        type: 'domNode',\r\n                        path: 'esri/dijit/Search',\r\n                        srcNodeRef: 'geocoderButton',\r\n                        options: {\r\n                            map: true,\r\n                            visible: true,\r\n                            enableButtonMode: true,\r\n                            expanded: true,\r\n                            disablePlaceFinder: viewing.search.disablePlaceFinder,\r\n                            hintText: viewing.search.hintText,\r\n                            layers: viewing.search.layers\r\n                        }\r\n                    }, widgets.search || {});\r\n                }\r\n            }\r\n\r\n            // https://developers.arcgis.com/web-map-specification/objects/widgets/\r\n            if (response.itemInfo.itemData.widgets) {\r\n                var timeSlider = response.itemInfo.itemData.widgets.timeSlider;\r\n                if (timeSlider) {\r\n                    widgets.timeSlider = this.mixinDeep({\r\n                        include: true,\r\n                        type: 'domNode',\r\n                        path: 'esri/dijit/TimeSlider',\r\n                        srcNodeRef: 'geocoderButton',\r\n                        options: lang.mixin({\r\n                            map: true\r\n                        }, timeSlider)\r\n                    }, widgets.slider || {});\r\n                }\r\n            }\r\n        }\r\n    });\r\n});"]}