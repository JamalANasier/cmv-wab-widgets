{"version":3,"sources":["LayerControl.js"],"names":["define","declare","array","lang","topic","domAttr","domConst","WidgetBase","Container","ContentPane","Button","ProjectParameters","esriConfig","require","LayerControl","map","layerInfos","icons","expand","collapse","checked","unchecked","update","menu","folder","folderOpen","separated","overlayReorder","overlayLabel","vectorReorder","vectorLabel","noMenu","noLegend","noZoom","noTransparency","subLayerMenu","swipe","swiperButtonStyle","baseClass","_vectorContainer","_overlayContainer","_swiper","_swipeLayerToggleHandle","_controls","dynamic","feature","image","tiled","csv","georss","wms","wfs","kml","vectortile","webtiled","imagevector","raster","stream","constructor","options","this","mixin","controls","publish","source","error","postCreate","inherited","arguments","ControlContainer","addChild","className","content","create","_addLayerControls","_subscribeToTopics","_removeLayerControlsHandler","subscribe","hitch","layers","_removeLayerControls","_addLayerControlsHandler","modules","forEach","layerInfo","controlOptions","exclude","mod","type","push","control","_checkReorder","_filterList","entry","reduce","prior","curr","layer","layerControlList","getChildren","filter","c","concat","layerControl","_layerType","removeChild","destroy","_addControl","Control","getLayer","loaded","_applyLayerControlOptions","on","controller","layerTitle","title","expanded","sublayers","startup","position","includeUnspecifiedLayers","subLayerInfos","excludedLayers","esriLayerInfos","length","sli","id","li","indexOf","_mixinLayerInfos","_setSublayerVisibilities","visibleIds","defaultVisibility","l","setVisibleLayers","s","shift","_moveUp","index","node","domNode","getPreviousSibling","layerIds","reorderLayer","containerNode","insertBefore","previousSibling","graphicsLayerIds","_moveDown","getNextSibling","nextSibling","child","_reorderUp","set","_reorderDown","_zoomToLayer","declaredClass","spatialReference","setExtent","fullExtent","defaults","geometryService","project","geometries","outSR","r","e","_swipeLayer","visible","disable","remove","enable","disableBtn","LayerSwipe","label","onClick","d","_swipeDisable","showAllLayers","show","hideAllLayers","hide"],"mappings":"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","file":"LayerControl.js","sourcesContent":["define([\r\n    'dojo/_base/declare',\r\n    'dojo/_base/array',\r\n    'dojo/_base/lang',\r\n    'dojo/topic',\r\n    'dojo/dom-attr',\r\n    'dojo/dom-construct',\r\n    'dijit/_WidgetBase',\r\n    'dijit/_Container',\r\n    'dijit/layout/ContentPane',\r\n    'dijit/form/Button',\r\n    'esri/tasks/ProjectParameters',\r\n    'esri/config',\r\n    'require',\r\n    'xstyle/css!./LayerControl/css/LayerControl.css'\r\n], function (\r\n    declare,\r\n    array,\r\n    lang,\r\n    topic,\r\n    domAttr,\r\n    domConst,\r\n    WidgetBase,\r\n    Container,\r\n    ContentPane,\r\n    Button,\r\n    ProjectParameters,\r\n    esriConfig,\r\n    require\r\n) {\r\n\r\n    var LayerControl = declare([WidgetBase, Container], {\r\n        map: null,\r\n        layerInfos: [],\r\n        icons: {\r\n            expand: 'fa-plus-square-o',\r\n            collapse: 'fa-minus-square-o',\r\n            checked: 'fa-check-square-o',\r\n            unchecked: 'fa-square-o',\r\n            update: 'fa-refresh',\r\n            menu: 'fa-bars',\r\n            folder: 'fa-folder-o',\r\n            folderOpen: 'fa-folder-open-o'\r\n        },\r\n        separated: false,\r\n        overlayReorder: false,\r\n        overlayLabel: false,\r\n        vectorReorder: false,\r\n        vectorLabel: false,\r\n        noMenu: null,\r\n        noLegend: null,\r\n        noZoom: null,\r\n        noTransparency: null,\r\n        subLayerMenu: {},\r\n        swipe: null,\r\n        swiperButtonStyle: 'position:absolute;top:20px;left:120px;z-index:50;',\r\n        // ^args\r\n        baseClass: 'layerControlDijit',\r\n        _vectorContainer: null,\r\n        _overlayContainer: null,\r\n        _swiper: null,\r\n        _swipeLayerToggleHandle: null,\r\n        _controls: {\r\n            dynamic: './LayerControl/controls/Dynamic',\r\n            feature: './LayerControl/controls/Feature',\r\n            image: './LayerControl/controls/Image',\r\n            tiled: './LayerControl/controls/Tiled',\r\n            csv: './LayerControl/controls/CSV',\r\n            georss: './LayerControl/controls/GeoRSS',\r\n            wms: './LayerControl/controls/WMS',\r\n            wfs: './LayerControl/controls/WFS',\r\n            kml: './LayerControl/controls/KML',\r\n            vectortile: './LayerControl/controls/VectorTile',\r\n            webtiled: './LayerControl/controls/WebTiled',\r\n            imagevector: './LayerControl/controls/ImageVector',\r\n            raster: './LayerControl/controls/Raster',\r\n            stream: './LayerControl/controls/Stream'\r\n        },\r\n        constructor: function (options) {\r\n            options = options || {};\r\n            if (!options.map) {\r\n                topic.publish('viewer/handleError', {\r\n                    source: 'LayerControl',\r\n                    error: 'map option is required'\r\n                });\r\n                return;\r\n            }\r\n            // add any user-defined controls - possibly for user-defined layers\r\n            this._controls = lang.mixin(this._controls, options.controls || {});\r\n        },\r\n        postCreate: function () {\r\n            this.inherited(arguments);\r\n            if (this.separated) {\r\n                var ControlContainer = declare([WidgetBase, Container]);\r\n                // vector layer label\r\n                if (this.vectorLabel !== false) {\r\n                    this.addChild(new ContentPane({\r\n                        className: 'vectorLabelContainer',\r\n                        content: this.vectorLabel\r\n                    }, domConst.create('div')), 'first');\r\n                }\r\n                // vector layer control container\r\n                this._vectorContainer = new ControlContainer({\r\n                    className: 'vectorLayerContainer'\r\n                }, domConst.create('div'));\r\n                this.addChild(this._vectorContainer, 'last');\r\n                // overlay layer label\r\n                if (this.overlayLabel !== false) {\r\n                    this.addChild(new ContentPane({\r\n                        className: 'overlayLabelContainer',\r\n                        content: this.overlayLabel\r\n                    }, domConst.create('div')), 'last');\r\n                }\r\n                // overlay layer control container\r\n                this._overlayContainer = new ControlContainer({\r\n                    className: 'overlayLayerContainer'\r\n                }, domConst.create('div'));\r\n                this.addChild(this._overlayContainer, 'last');\r\n            } else {\r\n                this.overlayReorder = false;\r\n                this.vectorReorder = false;\r\n            }\r\n            this._addLayerControls(this.layerInfos);\r\n            this._subscribeToTopics();\r\n        },\r\n        _subscribeToTopics: function () {\r\n            this._removeLayerControlsHandler = topic.subscribe('layerControl/removeLayerControls', lang.hitch(this, function (layers) {\r\n                this._removeLayerControls(layers);\r\n            }));\r\n            this._addLayerControlsHandler = topic.subscribe('layerControl/addLayerControls', lang.hitch(this, function (layerInfos) {\r\n                this._addLayerControls(layerInfos);\r\n            }));\r\n        },\r\n        _addLayerControls: function (layerInfos) {\r\n            // load only the modules we need\r\n            var modules = [];\r\n            // push layer control mods\r\n            array.forEach(layerInfos, function (layerInfo) {\r\n                // check if control is excluded\r\n                var controlOptions = layerInfo.controlOptions;\r\n                if (controlOptions && controlOptions.exclude === true) {\r\n                    return;\r\n                }\r\n                var mod = this._controls[layerInfo.type];\r\n                if (mod) {\r\n                    modules.push(mod);\r\n                } else {\r\n                    topic.publish('viewer/handleError', {\r\n                        source: 'LayerControl',\r\n                        error: 'the layer type \"' + layerInfo.type + '\" is not supported'\r\n                    });\r\n                }\r\n            }, this);\r\n            // load and go\r\n            require(modules, lang.hitch(this, function () {\r\n                array.forEach(layerInfos, function (layerInfo) {\r\n                    // exclude from widget\r\n                    var controlOptions = layerInfo.controlOptions;\r\n                    if (controlOptions && controlOptions.exclude === true) {\r\n                        return;\r\n                    }\r\n                    var control = this._controls[layerInfo.type];\r\n                    if (control) {\r\n                        require([control], lang.hitch(this, '_addControl', layerInfo));\r\n                    }\r\n                }, this);\r\n                this._checkReorder();\r\n            }));\r\n        },\r\n        // remove the control given an array of layers\r\n        _removeLayerControls: function (layers) {\r\n            // helper function to determine which children's layer have a match in the layers parameter\r\n            function _filterList (entry) {\r\n                return layers.reduce(function (prior, curr) {\r\n                    return (curr === entry.layer) || prior;\r\n                }, false);\r\n            }\r\n            // get a list of ALL the layers that meet the criteria\r\n            var layerControlList = this._overlayContainer.getChildren().filter(function (c) {\r\n                return _filterList(c);\r\n            }).concat(\r\n            this._vectorContainer.getChildren().filter(function (c) {\r\n                return _filterList(c);\r\n            })).concat(\r\n            this.getChildren().filter(function (c) {\r\n                return _filterList(c);\r\n            }));\r\n            // follow the same logic as when the layers were added\r\n            array.forEach(layerControlList, lang.hitch(this, function (layerControl) {\r\n                if (this.separated) {\r\n                    if (layerControl._layerType === 'overlay') {\r\n                        this._overlayContainer.removeChild(layerControl);\r\n                    } else {\r\n                        this._vectorContainer.removeChild(layerControl);\r\n                    }\r\n                } else {\r\n                    this.removeChild(layerControl);\r\n                }\r\n                layerControl.destroy();\r\n            }));\r\n        },\r\n        // create layer control and add to appropriate _container\r\n        _addControl: function (layerInfo, Control) {\r\n            var layer = (typeof layerInfo.layer === 'string') ? this.map.getLayer(layerInfo.layer) : layerInfo.layer;\r\n            if (layerInfo.controlOptions && (layerInfo.type === 'dynamic' || layerInfo.type === 'feature')) {\r\n                if (layer.loaded) {\r\n                    this._applyLayerControlOptions(layerInfo.controlOptions, layer);\r\n                } else {\r\n                    layer.on('load', lang.hitch(this, '_applyLayerControlOptions', layerInfo.controlOptions));\r\n                }\r\n            }\r\n            var layerControl = new Control({\r\n                controller: this,\r\n                layer: layer,\r\n                layerTitle: layerInfo.title,\r\n                controlOptions: lang.mixin({\r\n                    noLegend: null,\r\n                    noZoom: null,\r\n                    noTransparency: null,\r\n                    swipe: null,\r\n                    expanded: false,\r\n                    sublayers: true,\r\n                    menu: this.subLayerMenu[layerInfo.type]\r\n                }, layerInfo.controlOptions)\r\n            });\r\n            layerControl.startup();\r\n            var position = layerInfo.position || 0;\r\n            if (this.separated) {\r\n                if (layerControl._layerType === 'overlay') {\r\n                    this._overlayContainer.addChild(layerControl, position);\r\n                } else {\r\n                    this._vectorContainer.addChild(layerControl, position);\r\n                }\r\n            } else {\r\n                this.addChild(layerControl, position);\r\n            }\r\n        },\r\n        _applyLayerControlOptions: function (controlOptions, layer) {\r\n            if (typeof controlOptions.includeUnspecifiedLayers === 'undefined' && typeof controlOptions.subLayerInfos === 'undefined' && typeof controlOptions.excludedLayers === 'undefined') {\r\n                return;\r\n            }\r\n            var esriLayerInfos = [];\r\n            // Case 1: only show the layers that are explicitly listed\r\n            if (!controlOptions.includeUnspecifiedLayers && controlOptions.subLayerInfos && controlOptions.subLayerInfos.length !== 0) {\r\n                var subLayerInfos = array.map(controlOptions.subLayerInfos, function (sli) {\r\n                    return sli.id;\r\n                });\r\n                array.forEach(layer.layerInfos, function (li) {\r\n                    if (array.indexOf(subLayerInfos, li.id) !== -1) {\r\n                        esriLayerInfos.push(li);\r\n                    }\r\n                });\r\n            // Case 2: show ALL layers except those in the excluded list\r\n            } else if (controlOptions.excludedLayers) {\r\n                array.forEach(layer.layerInfos, function (li) {\r\n                    if (array.indexOf(controlOptions.excludedLayers, li.id) === -1) {\r\n                        esriLayerInfos.push(li);\r\n                    }\r\n                });\r\n\t\t\t// Case 3: just override the values found in the subLayerInfos\r\n            } else if (controlOptions.subLayerInfos) {\r\n                // show ALL layers that are in the map service's layerInfos, but take care to override the properties of each subLayerInfo as configured\r\n                this._mixinLayerInfos(layer.layerInfos, controlOptions.subLayerInfos);\r\n                this._setSublayerVisibilities(layer);\r\n                return;\r\n            }\r\n            // Finally, if we made use of the esriLayerInfos, make sure to apply all the subLayerInfos that were defined to our new array of esri layer infos\r\n            if (controlOptions.subLayerInfos) {\r\n                this._mixinLayerInfos(esriLayerInfos, controlOptions.subLayerInfos);\r\n            }\r\n            layer.layerInfos = esriLayerInfos;\r\n            this._setSublayerVisibilities(layer);\r\n        },\r\n        _setSublayerVisibilities: function (layer) {\r\n            var visibleIds = array.map(array.filter(layer.layerInfos, function (li) {\r\n                return li.defaultVisibility;\r\n            }), function (l) {\r\n                return l.id;\r\n            });\r\n            layer.setVisibleLayers(visibleIds);\r\n        },\r\n        _mixinLayerInfos: function (esriLayerInfos, subLayerInfos) {\r\n            // for each of the sublayers, go through the subLayerInfos from the controlOptions and see if defaultVisiblity is set to true or false\r\n            // then set each of the layer.layerInfos defaultVisibility appropriately\r\n\t\t\t// assume defaultVisibility is true if it's not defined\r\n            if (subLayerInfos && subLayerInfos.length !== 0) {\r\n                array.forEach(subLayerInfos, function (sli) {\r\n                    if (typeof sli.defaultVisibility === 'undefined') {\r\n                        sli.defaultVisibility = true;\r\n                    }\r\n                });\r\n                array.forEach(esriLayerInfos, function (li) {\r\n                    var sli = array.filter(subLayerInfos, function (s) {\r\n                        return s.id === li.id;\r\n                    }).shift();\r\n                    if (sli) {\r\n                        lang.mixin(li, sli);\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        // move control up in controller and layer up in map\r\n        _moveUp: function (control) {\r\n            var id = control.layer.id,\r\n                node = control.domNode,\r\n                index;\r\n            if (control._layerType === 'overlay') {\r\n                if (control.getPreviousSibling()) {\r\n                    index = array.indexOf(this.map.layerIds, id);\r\n                    this.map.reorderLayer(id, index + 1);\r\n                    this._overlayContainer.containerNode.insertBefore(node, node.previousSibling);\r\n                    this._checkReorder();\r\n                }\r\n            } else if (control._layerType === 'vector') {\r\n                if (control.getPreviousSibling()) {\r\n                    index = array.indexOf(this.map.graphicsLayerIds, id);\r\n                    this.map.reorderLayer(id, index + 1);\r\n                    this._vectorContainer.containerNode.insertBefore(node, node.previousSibling);\r\n                    this._checkReorder();\r\n                }\r\n            }\r\n        },\r\n        // move control down in controller and layer down in map\r\n        _moveDown: function (control) {\r\n            var id = control.layer.id,\r\n                node = control.domNode,\r\n                index;\r\n            if (control._layerType === 'overlay') {\r\n                if (control.getNextSibling()) {\r\n                    index = array.indexOf(this.map.layerIds, id);\r\n                    this.map.reorderLayer(id, index - 1);\r\n                    this._overlayContainer.containerNode.insertBefore(node, node.nextSibling.nextSibling);\r\n                    this._checkReorder();\r\n                }\r\n            } else if (control._layerType === 'vector') {\r\n                if (control.getNextSibling()) {\r\n                    index = array.indexOf(this.map.graphicsLayerIds, id);\r\n                    this.map.reorderLayer(id, index - 1);\r\n                    this._vectorContainer.containerNode.insertBefore(node, node.nextSibling.nextSibling);\r\n                    this._checkReorder();\r\n                }\r\n            }\r\n        },\r\n        // enable/disable move up/down menu items when the last or first child respectively\r\n        _checkReorder: function () {\r\n            if (this.separated) {\r\n                if (this.vectorReorder) {\r\n                    array.forEach(this._vectorContainer.getChildren(), function (child) {\r\n                        if (child._reorderUp) {\r\n                            if (!child.getPreviousSibling()) {\r\n                                child._reorderUp.set('disabled', true);\r\n                            } else {\r\n                                child._reorderUp.set('disabled', false);\r\n                            }\r\n                        }\r\n                        if (child._reorderDown) {\r\n                            if (!child.getNextSibling()) {\r\n                                child._reorderDown.set('disabled', true);\r\n                            } else {\r\n                                child._reorderDown.set('disabled', false);\r\n                            }\r\n                        }\r\n                    }, this);\r\n                }\r\n                if (this.overlayReorder) {\r\n                    array.forEach(this._overlayContainer.getChildren(), function (child) {\r\n                        if (child._reorderUp) {\r\n                            if (!child.getPreviousSibling()) {\r\n                                child._reorderUp.set('disabled', true);\r\n                            } else {\r\n                                child._reorderUp.set('disabled', false);\r\n                            }\r\n                        }\r\n                        if (child._reorderDown) {\r\n                            if (!child.getNextSibling()) {\r\n                                child._reorderDown.set('disabled', true);\r\n                            } else {\r\n                                child._reorderDown.set('disabled', false);\r\n                            }\r\n                        }\r\n                    }, this);\r\n                }\r\n            }\r\n        },\r\n        // zoom to layer\r\n        _zoomToLayer: function (layer) {\r\n            if (layer.declaredClass === 'esri.layers.KMLLayer') {\r\n                return;\r\n            }\r\n\r\n            // need to \"merge\" each kml layers fullExtent for project geometries\r\n\r\n            var map = this.map;\r\n            if (layer.spatialReference === map.spatialReference) {\r\n                map.setExtent(layer.fullExtent, true);\r\n            } else if (esriConfig.defaults.geometryService) {\r\n                esriConfig.defaults.geometryService.project(lang.mixin(new ProjectParameters(), {\r\n                    geometries: [layer.fullExtent],\r\n                    outSR: map.spatialReference\r\n                }), function (r) {\r\n                    map.setExtent(r[0], true);\r\n                }, function (e) {\r\n                    topic.publish('viewer/handleError', {\r\n                        source: 'LayerControl._zoomToLayer',\r\n                        error: e\r\n                    });\r\n                });\r\n            } else {\r\n                topic.publish('viewer/handleError', {\r\n                    source: 'LayerControl._zoomToLayer',\r\n                    error: 'esriConfig.defaults.geometryService is not set'\r\n                });\r\n            }\r\n        },\r\n        // layer swiper\r\n        _swipeLayer: function (layer, type) {\r\n            if (!layer || !layer.visible) {\r\n                return;\r\n            }\r\n            if (!this._swiper) {\r\n                require(['esri/dijit/LayerSwipe'], lang.hitch(this, function (LayerSwipe) {\r\n                    this._swiper = new LayerSwipe({\r\n                        type: type || 'vertical',\r\n                        map: this.map,\r\n                        layers: [layer]\r\n                    }, domConst.create('div', {}, this.map.id, 'first'));\r\n                    this._swiper.startup();\r\n                    this._swiper.disableBtn = new Button({\r\n                        label: 'Exit Layer Swipe',\r\n                        onClick: lang.hitch(this, '_swipeDisable')\r\n                    }, domConst.create('div', {}, this.map.id));\r\n                    domAttr.set(this._swiper.disableBtn.domNode, 'style', this.swiperButtonStyle);\r\n                }));\r\n            } else {\r\n                this._swiper.disable();\r\n                if (this._swipeLayerToggleHandle) {\r\n                    this._swipeLayerToggleHandle.remove();\r\n                }\r\n                this._swiper.set('layers', [layer]);\r\n                this._swiper.set('type', type);\r\n                this._swiper.enable();\r\n                domAttr.set(this._swiper.disableBtn.domNode, 'style', this.swiperButtonStyle);\r\n            }\r\n            this._swipeLayerToggleHandle = topic.subscribe('layerControl/layerToggle', lang.hitch(this, function (d) {\r\n                if (d.id === layer.id && !d.visible) {\r\n                    this._swipeDisable();\r\n                }\r\n            }));\r\n        },\r\n        _swipeDisable: function () {\r\n            this._swiper.disable();\r\n            if (this._swipeLayerToggleHandle) {\r\n                this._swipeLayerToggleHandle.remove();\r\n            }\r\n            domAttr.set(this._swiper.disableBtn.domNode, 'style', 'display:none;');\r\n        },\r\n        // turn all layers on/off\r\n        //   no arguments\r\n        //   b/c controls are self aware of layer visibility change simply show/hide layers\r\n        showAllLayers: function () {\r\n            if (this.separated) {\r\n                array.forEach(this._vectorContainer.getChildren(), function (child) {\r\n                    child.layer.show();\r\n                });\r\n                array.forEach(this._overlayContainer.getChildren(), function (child) {\r\n                    child.layer.show();\r\n                });\r\n            } else {\r\n                array.forEach(this.getChildren(), function (child) {\r\n                    child.layer.show();\r\n                });\r\n            }\r\n        },\r\n        hideAllLayers: function () {\r\n            if (this.separated) {\r\n                array.forEach(this._vectorContainer.getChildren(), function (child) {\r\n                    child.layer.hide();\r\n                });\r\n                array.forEach(this._overlayContainer.getChildren(), function (child) {\r\n                    child.layer.hide();\r\n                });\r\n            } else {\r\n                array.forEach(this.getChildren(), function (child) {\r\n                    child.layer.hide();\r\n                });\r\n            }\r\n        }\r\n    });\r\n    return LayerControl;\r\n});"]}